{
  "IdUser": {
    "S": "rjara001@gmail.com"
  },
  "Groups": {
    "L": [
      {
        "M": {
          "Id": {
            "S": "-1"
          },
          "LastModified": {
            "S": "2023-04-11T23:29:37.994Z"
          },
          "Name": {
            "S": "__History_Learned"
          },
          "Status": {
            "N": "0"
          },
          "Words": {
            "S": ""
          }
        }
      },
      {
        "M": {
          "Id": {
            "S": "0"
          },
          "LastModified": {
            "S": "2023-06-01T18:55:00.465Z"
          },
          "Name": {
            "S": "Biblical"
          },
          "Status": {
            "N": "0"
          },
          "Words": {
            "S": "dW5kZWZpbmVkCTAJMAkwCTA="
          }
        }
      },
      {
        "M": {
          "Id": {
            "S": "15"
          },
          "LastModified": {
            "S": "2023-06-22T22:59:35.326Z"
          },
          "Name": {
            "S": "Twitter"
          },
          "Status": {
            "N": "0"
          },
          "Words": {
            "S": ""
          }
        }
      },
      {
        "M": {
          "Id": {
            "S": "12"
          },
          "Name": {
            "S": "English / Spanish (All 4)"
          },
          "Words": {
            "S": ""
          }
        }
      },
      {
        "M": {
          "Id": {
            "S": "11"
          },
          "Name": {
            "S": "English / Spanish (All 3)"
          },
          "Words": {
            "S": ""
          }
        }
      },
      {
        "M": {
          "Id": {
            "S": "10"
          },
          "Name": {
            "S": "English / Spanish (All 2)"
          },
          "Words": {
            "S": ""
          }
        }
      },
      {
        "M": {
          "Id": {
            "S": "6"
          },
          "Name": {
            "S": "Phrases"
          },
          "Words": {
            "S": ""
          }
        }
      },
      {
        "M": {
          "Id": {
            "S": "7"
          },
          "LastModified": {
            "S": "2023-04-17T22:35:06.654Z"
          },
          "Name": {
            "S": "English / Spanish (Common Words)"
          },
          "Words": {
            "S": "dG8gZGVmZXIJYSBhcGxhemFyCTAJMAkwCmhlbGQJYSBjYWJvCTAJMAkxCnRvIHNodXQgdXAJYSBjYWxsYXIJMAkxCTEKYmVsb3cJYSBjb250aW51YWNpb24JMAkwCTAKdG8gY3J1bWJsZQlhIGRlc21vcm9uYXJzZQkwCTEJMQpsYXRlCWEgZmluYWxlcyBkZQkwCTAJMQp0aG9yb3VnaGx5CWEgZm9uZG8JMAkwCTAKY29udmVyc2VseQlhIGxhIGludmVyc2EJMAkxCTEKc2lnaHQJYSBsYSB2aXN0YQkwCTAJMAphbG9uZwlhIGxvIGxhcmdvCTAJMAkxCnRvIHRhaWxvcglhIG1lZGlkYQkwCTAJMQp1bmxlc3MJYSBtZW5vcyBxdWUJMAkxCTEKZGVzcGl0ZQlhIHBlc2FyIGRlCTAJMAkxCmluIHNwaXRlIG9mCWEgcGVzYXIgZGUJMAkwCTAKbm90d2l0aHN0YW5kaW5nCWEgcGVzYXIgZGUJMAkxCTEKdGhvdWdoCWEgcGVzYXIgZGUgcXVlCTAJMAkxCmZvb2xwcm9vZglhIHBydWViYSBkZSB0b250b3MJMAkxCTEKbmFtZWx5CWEgc2FiZXIJMAkwCTAKdG8gZGl0Y2gJYWJhbmRvbmFyCTAJMQkxCnRvIHF1aXQJYWJhbmRvbmFyCTAJMAkwCmRpdGNoZWQJYWJhbmRvbm8JMAkxCTAKZW5jb21wYXNzZXMJYWJhcmNhCTAJMQkxCmVuY29tcGFzc2luZwlhYmFyY2EJMAkxCTEKZW5jb21wYXNzCWFiYXJjYXIJMAkxCTEKc3BhbglhYmFyY2FyCTAJMAkxCm9wZW5lZAlhYmllcnRvCTAJMQkxCmNoYXNtCWFiaXNtbwkwCTEJMQphZHZvY2F0ZQlhYm9nYWRvCTAJMQkxCmF0dG9ybmV5CWFib2dhZG8JMAkwCTEKdGFja2xpbmcJYWJvcmRhcgkwCTEJMQplbWJyYWNlCWFicmF6bwkwCTEJMQpodWcJYWJyYXpvCTAJMAkwCmNvYXQJYWJyaWdvCTAJMQkxCm9wZW4JYWJyaXIJMAkxCTEKb3ZlcndoZWxtaW5nCWFicnVtYWRvcmEJMAkwCTAKZXNjaGV3CWFic3RlbmVyc2UgZGUJMAkwCTEKZHVsbAlhYnVycmlkbwkwCTAJMApmbGFyZWQJYWNhbXBhbmFkbwkwCTEJMQpyZWdhcmRpbmcJYWNlcmNhIGRlCTAJMQkxCmFncmVlZOKAk3Vwb24JYWNvcmRhZG8JMAkxCTEKYWdyZWUJYWNvcmRhcgkwCTEJMQphY2N1c3RvbWVkCWFjb3N0dW1icmFkb3MJMAkwCTAKc3R1bnRzCWFjcm9iYWNpYXMJMAkxCTEKYXNzZXRzCWFjdGl2b3MJMAkwCTEKYWN0CWFjdG8JMAkxCTEKYWdyZWVtZW50CWFjdWVyZG8JMAkxCTEKYXJyYW5nZW1lbnQJYWN1ZXJkbwkwCTAJMQphY2NydWVkCWFjdW11bGFkbwkwCTEJMQpjb2luZWQJYWN1w7FhZG8JMAkwCTAKY3VybCB1cCBvbglhY3VycnVjYXJzZQkwCTAJMAphY2tub3dsZWRnZW1lbnQJYWN1c2UgZGUgcmVjaWJvCTAJMAkxCnRhaWxvcglhZGFwdGFyCTAJMAkwCnN1aXRhYmxlCWFkZWN1YWRvCTAJMQkxCnN1aXRlZAlhZGVjdWFkbwkwCTAJMQpmb3J3YXJkCWFkZWxhbnRlCTAJMAkwCm9uCWFkZWxhbnRlCTAJMQkxCm9ud2FyZAlhZGVsYW50ZQkwCTAJMQpmdXJ0aGVybW9yZQlhZGVtYXMJMAkwCTEKYmVzaWRlcwlhZGVtYXMgZGUJMAkxCTEKc3BpY2VkIHVwCWFkZXJlemFkbwkwCTEJMQpnb29kYnllCWFkaW9zCTAJMQkxCnRlZW5hZ2VyCWFkb2xlc2NlbnRlCTAJMAkwCndvcnNoaXBpbmcJYWRvcmFyCTAJMQkxCndvcnNoaXBwaW5nCWFkb3JhcgkwCTEJMQphY3F1aXJlCWFkcXVpcmlyCTAJMQkxCnRvIGFjcXVpcmUJYWRxdWlyaXIJMAkxCTEKY2F2ZWF0CWFkdmVydGVuY2lhCTAJMAkwCmNhdmVhdHMJYWR2ZXJ0ZW5jaWFzCTAJMAkwCnN0cmVhbWxpbmVkCWFlcm9kaW5hbWljbwkwCTEJMQpzdHJlYW1saW5lCWFlcm9kaW5hbWl6YXIJMAkxCTEKc2hhdmUJYWZlaXRhcnNlCTAJMAkwCnR3ZWFraW5nCWFmaW5hbmRvCTAJMQkxCmFzc2VydGlvbglhZmlybWFjaW9uCTAJMQkxCmFzc2VydGluZwlhZmlybWFjaW9uIGRlCTAJMQkxCnRvIGFzc2VydAlhZmlybWFyCTAJMQkxCnN0YXRlZAlhZmlybW8JMAkwCTEKdGhhbmtmdWxseQlhZm9ydHVuYWRhbWVudGUJMAkxCTAKZ3JhYnMJYWdhcnJhCTAJMQkxCmNsdXRjaGluZwlhZ2FycmFuZG9zZQkwCTAJMApncmFiCWFnYXJyYXIJMAkxCTEKZ3JpcAlhZ2FycmFyCTAJMQkxCm5pbWJsZQlhZ2lsCTAJMQkxCnNvdXIJYWdyaWEJMAkxCTEKYnVuZGxpbmcJYWdydXBhY2lvbgkwCTEJMQphY3V0ZQlhZ3VkYQkwCTAJMAp0byBzaGFycGVuCWFndWRpemFyCTAJMAkxCnRvIGRlbHZlCWFob25kYXIJMAkxCTEKY2hlc3MJYWplZHJlegkwCTAJMAp0byB0d2VhawlhanVzdGFyCTAJMQkxCmZpdAlhanVzdGUJMAkxCTEKaW4gc28gZG9pbmcJYWwgaGFjZXJsbwkwCTEJMQphZnRlciBhIHdoaWxlCWFsIHBvY28gdGllbXBvCTAJMQkwCndob2xlc2FsZQlhbCBwb3IgbWF5b3IJMAkwCTEKdXBzaWRlIGRvd24JYWwgcmV2ZXMJMAkxCTEKcHJhaXNlCWFsYWJhbnphCTAJMQkxCndpbmdzCWFsYXMJMAkwCTAKcmVhY2gJYWxjYW5jZQkwCTAJMQphdHRhaW5hYmxlCWFsY2FuemFibGUJMAkxCTEKYXR0YWluCWFsY2FuemFyCTAJMQkwCnRvIHJlYWNoCWFsY2FuemFyCTAJMQkxCm1vb3NlCWFsY2UJMAkwCTAKYWxsZWdlcwlhbGVnYS9zb3N0aWVuZS9hZmlybWEJMAkwCTEKcGlucwlhbGZpbGVyZXMJMAkxCTEKY2FycGV0CWFsZm9tYnJhCTAJMQkxCmV2ZXIgd29uZGVyZWQJYWxndW5hIHZleiBzZSBwcmVndW50bwkwCTEJMQp0byBlYXNlCWFsaXZpYXIJMAkwCTAKdGhlcmUJYWxsYQkwCTEJMQpwYXZlCWFsbGFuYXIJMAkwCTAKdGhlcmUJYWxsaQkwCTAJMApwaWxsb3cJYWxtb2hhZGEJMAkxCTEKc3VidmVydGVkCWFsdGVyYWRvCTAJMAkxCnRvZ2dsZQlhbHRlcm5hcgkwCTEJMQpjZWFzZWZpcmUJYWx0byBlbCBmdWVnbwkwCTEJMQpkYXduaW5nCWFtYW5lY2VyCTAJMQkxCmRheWJyZWFrCWFtYW5lY2VyCTAJMQkxCnN1bnJpc2UJYW1hbmVjZXIJMAkxCTEKYml0dGVyCWFtYXJnbwkwCTEJMQptZW5hY2UJYW1lbmF6YQkwCTAJMAp0aHJlYXRzCWFtZW5hemFzCTAJMQkxCmJ1ZGR5CWFtaWdvCTAJMAkwCmJyZWFkdGgJYW1wbGl0dWQJMAkwCTAKYWRkZW5kdW0JYW5leG8JMAkxCTEKZW5jb3VyYWdlcwlhbmltYQkwCTEJMQp0byBlbmNvdXJhZ2UJYW5pbWFyCTAJMQkxCmNoZWVyCWFuaW1vCTAJMQkxCnVuc3VuZwlhbm9uaW1vCTAJMQkxCmFueGlvdXMJYW5zaW9zbwkwCTEJMQpmb3JlbW9zdAlhbnRlIHRvZG8JMAkwCTEKcHJpb3IgdG8JYW50ZXMgZGUJMAkxCTEKYWhlYWQgb2YgdGltZQlhbnRlcyBkZSB0aWVtcG8JMAkwCTAKb3V0ZGF0ZWQJYW50aWN1YWRvCTAJMQkxCm51bGxpZnkJYW51bGFyCTAJMQkxCmZvcmV0ZWxscwlhbnVuY2lhCTAJMAkwCmFkdmVydGlzZWQJYW51bmNpYWRvCTAJMQkxCnllYXIJYcOxbwkwCTEJMQpsZXZlcmFuZ2UJYXBhbGFuY2FtaWVudG8JMAkxCTEKYXBwbGlhbmNlCWFwYXJhdG8JMAkxCTEKZ2FkZ2V0cwlhcGFyYXRvcwkwCTAJMAphcHBlYXIJYXBhcmVjZW4JMAkwCTAKc2hvdyB1cCBhYm92ZQlhcGFyZWNlbiBwb3IgZW5jaW1hIGRlCTAJMQkxCnBvcHBlZAlhcGFyZWNpbwkwCTEJMQpzZWVtaW5nbHkJYXBhcmVudGVtZW50ZQkwCTAJMAphc2lkZQlhcGFydGUJMAkxCTEKc3RvbmVkCWFwZWRyZWFkbwkwCTEJMQpubyBzb29uZXIgaGFkCWFwZW5hcyBoYWJpYQkwCTAJMQphcHBldGl6ZXJzCWFwZXJpdGl2bwkwCTAJMQpjZWxlcnkJYXBpbwkwCTAJMApkZWZlcglhcGxhemFyCTAJMQkxCmF3YXJlIGFwcGxpY2F0aW9uCWFwbGljYWNpb25lcyBjb21wYXRpYmxlcwkwCTEJMQpkdWJiZWQJYXBvZGFkbwkwCTAJMApiZXQJYXBvc3RhcgkwCTEJMQpodXJyaWVkCWFwcmVzdXJhZG8JMAkxCTEKdGlnaHQJYXByZXRhZG8JMAkxCTEKdGlnaHRlbglhcHJldGFyCTAJMQkxCnBhc3NlZAlhcHJvYmFkbwkwCTEJMQphcHByb3ZlCWFwcm9iYXIJMAkxCTEKZXhwbG9pdGluZyBhIHdpZGUJYXByb3ZlY2hhbmRvIHVuYSBhbXBsaWEJMAkxCTEKYXZhaWwJYXByb3ZlY2hhcgkwCTEJMQpyb3VnaGx5CWFwcm94aW1hZGFtZW50ZQkwCTEJMAphaW1pbmcJYXB1bnRhbmRvCTAJMQkxCmh1cnJ5CWFwdXJvCTAJMQkxCmhlcmUJYXF1aQkwCTEJMQpidXNoCWFyYnVzdG8JMAkxCTEKZmlsZQlhcmNoaXZvCTAJMAkwCnN0YWdpbmcgYXJlYQlhcmVhIGRlIGVuc2F5bwkwCTEJMQpib290IHVwCWFycmFuY2FyCTAJMQkxCmNyZWVwCWFycmFzdHJhcnNlCTAJMQkxCnNuYXRjaAlhcnJlYmF0YXIJMAkwCTAKc2VhbQlhcnJ1Z2EJMAkwCTAKd3JpbmtsZWQJYXJydWdhZGEJMAkxCTAKcHVja2VyZWQJYXJydWdvCTAJMAkxCmNyYWZ0c21hbnNoaXAJYXJ0ZXNhbmlhCTAJMAkwCnRvIGluc3VyZQlhc2VndXJhcgkwCTEJMQphZmZvcmRhYmxlCWFzZXF1aWJsZQkwCTAJMQphcyB3ZWxsCWFzaQkwCTAJMAp0aHVzCWFzaQkwCTAJMQphcyB3ZWxsIGFzCWFzaSBjb21vCTAJMQkxCmF0dGVuZGVlCWFzaXN0ZW50ZQkwCTEJMQphdHRlbmRpbmcJYXNpc3RpcgkwCTAJMQp0byBhdHRlbmQJYXNpc3RpcgkwCTEJMQp3YW5uYWJlCWFzcGlyYW50ZQkwCTEJMQphZmZhaXJzCWFzdW50b3MJMAkxCTEKc2NhcmVzCWFzdXN0YQkwCTEJMQpzdHJhcHBlZAlhdGFkbwkwCTAJMQp0aWVkCWF0YWRvCTAJMQkxCnRvIHRpZQlhdGFyCTAJMQkxCmNvZmZpbglhdGF1ZAkwCTEJMQpjYXRlcglhdGVuZGVyCTAJMAkwCmxhbmRlZAlhdGVycml6bwkwCTEJMQplbnRpY2luZwlhdHJhY3RpdmEJMAkwCTEKZW50aWNlCWF0cmFlcgkwCTAJMQphd2Z1bAlhdHJvegkwCTEJMQplZ3JlZ2lvdXMJYXRyb3oJMAkwCTEKYXVnbWVudAlhdW1lbnRhcgkwCTEJMQpFbWJhcnJhc21lbnQJVmVyZ3VlbnphCTAJMQkxCmJlaG9sZAlNaXJhZAkwCTAJMQ=="
          }
        }
      },
      {
        "M": {
          "Id": {
            "S": "9"
          },
          "LastModified": {
            "S": "2023-04-23T11:48:24.011Z"
          },
          "Name": {
            "S": "English / Spanish (All 1)"
          },
          "Words": {
            "S": ""
          }
        }
      },
      {
        "M": {
          "Id": {
            "S": "5"
          },
          "LastModified": {
            "S": "2023-11-16T20:26:15.357Z"
          },
          "Name": {
            "S": "Paypal"
          },
          "Words": {
            "S": ""
          }
        }
      },
      {
        "M": {
          "Id": {
            "S": "8"
          },
          "LastModified": {
            "S": "2023-11-17T10:51:02.409Z"
          },
          "Name": {
            "S": "Frases 3"
          },
          "Words": {
            "S": ""
          }
        }
      },
      {
        "M": {
          "Id": {
            "S": "16"
          },
          "LastModified": {
            "S": "2023-11-17T19:39:16.531Z"
          },
          "Name": {
            "S": "Common Pharse Verb"
          },
          "Status": {
            "N": "1"
          },
          "Words": {
            "S": "QWN0IHVwCVBvcnRhcnNlIG1hbAkwCTAJMQpBZGQgdXAJVGVuZXIgc2VudGlkby8gc3VtYXIJMAkwCTEKQXNrIGFyb3VuZAlQcmVndW50YXIgcG9yIGFow60JMAkxCTEKQmFjayB1cAlSZXNwYWxkYXIvIHJldHJvY2VkZXIJMAkxCTEKQmVhdCB1cAlHb2xwZWFyCTAJMAkxCkJsb3cgdXAJRXhwbG90YXIvIGluZmxhcgkwCTAJMQpCcmVhayBkb3duCUF2ZXJpYXJzZS8gZGVzZ2xvc2FyCTAJMQkxCkJyZWFrIGluCUVudHJhciBmb3J6YW5kbyB1bmEgcHVlcnRhCTAJMAkxCkJyZWFrIG91dAlFc2NhcGFyLyBlc3RhbGxhcgkwCTAJMQpCcmluZyB1cAlNZW5jaW9uYXIgdW4gdGVtYS8gY3JpYXIJMAkwCTEKQnJ1c2ggdXAgb24JUmVwYXNhciBhbGdvCTAJMAkxCkJ1aWxkIHVwCUFjdW11bGFyLyBmb3J0YWxlY2VyCTAJMAkxCkJ1cm4gb3V0CVF1ZW1hcnNlLyBhZ290YXJzZQkwCTAJMQpDYWxsIGJhY2sJRGV2b2x2ZXIgdW5hIGxsYW1hZGEJMAkxCTEKQ2FsbSBkb3duCUNhbG1hci8gdHJhbnF1aWxpemFyc2UJMAkxCTEKQ2Fycnkgb24JQ29udGludWFyCTAJMAkxCkNhdGNoIHVwCUFsY2FuemFyLyBwb25lcnNlIGFsIGTDrWEJMAkxCTEKQ2hlY2sgaW4JUmVnaXN0cmFyc2UJMAkwCTEKQ2hlY2sgb3V0CVBhZ2FyIHkgZGVqYXIgdW4gaG90ZWwvIHJldmlzYXIgYWxnbwkwCTEJMQpDaGVlciB1cAlBbmltYXIJMAkwCTAKQ2xlYW4gdXAJTGltcGlhci8gYXJyZWdsYXIJMAkxCTEKQ29tZSBhY3Jvc3MJRW5jb250cmFyc2UgY29uLyBwYXJlY2VyCTAJMQkxCkNvbWUgYWxvbmcJQWNvbXBhw7Fhci8gYXZhbnphcgkwCTAJMApDb21lIGFwYXJ0CURlc2FybWFyc2UvIGRlc21vcm9uYXJzZQkwCTAJMQpDb21lIGFyb3VuZAlDb252ZW5jZXIvIHJlY3VwZXJhcnNlCTAJMAkxCkNvbWUgYmFjawlWb2x2ZXIJMAkxCTEKQ29tZSBieQlWaXNpdGFyLyBjb25zZWd1aXIJMAkwCTEKQ29tZSBkb3duCUJhamFyLyBkZXByaW1pcnNlCTAJMAkxCkNvbWUgZm9yd2FyZAlQcmVzZW50YXJzZSB2b2x1bnRhcmlhbWVudGUJMAkwCTEKQ29tZSBpbglFbnRyYXIvIHRlbmVyIMOpeGl0bwkwCTAJMQpDb21lIG9mZglRdWl0YXJzZS8gcmVzdWx0YXIJMAkwCTEKQ29tZSBvbglBdmFuemFyLyBhcHVyYXJzZQkwCTAJMQpDb21lIG91dAlTYWxpci8gcmV2ZWxhcnNlCTAJMAkxCkNvbWUgb3ZlcglWZW5pci8gdmlzaXRhcgkwCTAJMApDb21lIHVwCVN1cmdpci8gYWNlcmNhcnNlCTAJMAkxCkNvdW50IG9uCURlcGVuZGVyIGRlLyBjb25maWFyIGVuCTAJMAkxCkN1dCBkb3duCVJlZHVjaXIvIHRhbGFyCTAJMAkxCkN1dCBvZmYJQ29ydGFyLyBkZXNjb25lY3RhcgkwCTEJMQpDdXQgb3V0CVJlY29ydGFyLyBlbGltaW5hcgkwCTAJMQpEZWFsIHdpdGgJTGlkaWFyIGNvbi8gdHJhdGFyCTAJMQkxCkRvIG92ZXIJUmVoYWNlcgkwCTAJMQpEbyB3aXRob3V0CVByZXNjaW5kaXIgZGUJMAkwCTEKRHJvcCBieQlWaXNpdGFyIHNpbiBwcmV2aW8gYXZpc28JMAkwCTEKRHJvcCBvZmYJRGVqYXIgYSBhbGd1aWVuIGVuIGFsZ8O6biBsdWdhcgkwCTAJMQpEcm9wIG91dAlBYmFuZG9uYXIvIHJldGlyYXJzZQkwCTAJMQpFYXQgb3V0CUNvbWVyIGZ1ZXJhIGRlIGNhc2EJMAkxCTEKRW5kIHVwCVRlcm1pbmFyLyBhY2FiYXIJMAkxCTEKRmFsbCBhcGFydAlEZXNtb3JvbmFyc2UvIGNhZXJzZSBhIHBlZGF6b3MJMAkwCTAKRmFsbCBiZWhpbmQJUXVlZGFyc2UgYXRyw6FzCTAJMQkxCkZhbGwgZm9yCUVuYW1vcmFyc2UgZGUvIGNhZXIgZW4gbGEgdHJhbXBhCTAJMAkxCkZhbGwgb2ZmCURpc21pbnVpci8gY2FlcnNlCTAJMAkxCkZpZ3VyZSBvdXQJUmVzb2x2ZXIvIGVudGVuZGVyCTAJMAkxCkZpbGwgb3V0CUNvbXBsZXRhciB1biBmb3JtdWxhcmlvCTAJMAkxCkZpbmQgb3V0CURlc2N1YnJpci8gYXZlcmlndWFyCTAJMQkxCkdldCBhbG9uZwlMbGV2YXJzZSBiaWVuLyBhdmFuemFyCTAJMQkxCkdldCBhd2F5CUVzY2FwYXIvIGFsZWphcnNlCTAJMAkxCkdldCBiYWNrCVJlZ3Jlc2FyCTAJMAkxCkdldCBieQlBcnJlZ2zDoXJzZWxhcy8gc29icmV2aXZpcgkwCTEJMQpHZXQgaW4JRW50cmFyLyBsbGVnYXIJMAkxCTEKR2V0IG9mZglCYWphcnNlLyBzYWxpciBkZQkwCTAJMQpHZXQgb24JU3ViaXJzZS8gbGxldmFyc2UgYmllbgkwCTAJMQpHZXQgb3ZlcglTdXBlcmFyLyByZWN1cGVyYXJzZQkwCTEJMQpHZXQgdXAJTGV2YW50YXJzZS8gcG9uZXJzZSBkZSBwaWUJMAkxCTEKR2l2ZSBhd2F5CVJlZ2FsYXIvIHJldmVsYXIJMAkwCTAKR2l2ZSBiYWNrCURldm9sdmVyCTAJMAkxCkdpdmUgdXAJUmVudW5jaWFyLyBhYmFuZG9uYXIJMAkwCTEKR28gYWhlYWQJQWRlbGFudGUvIGVtcGV6YXIJMAkwCTEKR28gb2ZmCVNvbmFyLyBleHBsb3RhcgkwCTAJMQpHbyBvbglDb250aW51YXIvIHBhc2FyCTAJMQkxCkdvIG91dAlTYWxpci8gYXBhZ2Fyc2UJMAkwCTEKR28gb3ZlcglSZXZpc2FyLyByZXBhc2FyCTAJMAkxCkdvIHRocm91Z2gJUGFzYXIgcG9yLyBleHBlcmltZW50YXIJMAkxCTEKR28gd2l0aAlJciBjb24vIGNvbWJpbmFyCTAJMAkxCkhvbGQgb24JRXNwZXJhci8gYWdhcnJhcnNlCTAJMQkxCktlZXAgb24JU2VndWlyLyBjb250aW51YXIJMAkwCTEKS2VlcCB1cCB3aXRoCU1hbnRlbmVyc2UgYWwgZMOtYSBjb24JMAkxCTEKTGF5IG9mZglEZXNwZWRpci8gZGVqYXIgZGUgbW9sZXN0YXIJMAkxCTEKTGVhdmUgb3V0CU9taXRpci8gZXhjbHVpcgkwCTAJMApMZXQgZG93bglEZWNlcGNpb25hci8gZGVqYXIgY2FlcgkwCTAJMQpMb29rIGFmdGVyCUN1aWRhci8gYXRlbmRlcgkwCTAJMApMb29rIGZvcglCdXNjYXIvIHRyYXRhciBkZSBlbmNvbnRyYXIJMAkwCTEKTG9vayBmb3J3YXJkIHRvCUVzcGVyYXIgY29uIGlsdXNpw7NuCTAJMQkxCkxvb2sgaW50bwlJbnZlc3RpZ2FyLyBleGFtaW5hcgkwCTAJMQpMb29rIG91dAlDdWlkYWRvLyBlc3RhciBhbGVydGEJMAkwCTEKTG9vayBvdmVyCVJldmlzYXIvIHJlcGFzYXIJMAkwCTEKTG9vayB1cAlCdXNjYXIgZW4gZWwgZGljY2lvbmFyaW8vIG1lam9yYXIJMAkwCTEKTWFrZSB1cAlDb21wZW5zYXIvIGludmVudGFyCTAJMAkxCk1hcmsgZG93bglNYXJjYXIgYSBsYSBiYWphLyByZWJhamFyCTAJMAkxCk1peCB1cAlNZXpjbGFyLyBjb25mdW5kaXIJMAkxCTEKUGFzcyBhd2F5CUZhbGxlY2VyLyBtb3JpcgkwCTEJMQpQYXNzIG91dAlEZXNtYXlhcnNlLyByZXBhcnRpcgkwCTEJMQpQYXNzIHVwCVJlY2hhemFyLyBkZWphciBwYXNhciB1bmEgb3BvcnR1bmlkYWQJMAkwCTEKUGF5IGJhY2sJUGFnYXIvIGRldm9sdmVyCTAJMQkxClBpY2sgb3V0CUVsZWdpci8gc2VsZWNjaW9uYXIJMAkxCTEKUGljayB1cAlSZWNvZ2VyLyBhcHJlbmRlcgkwCTEJMQpQb2ludCBvdXQJU2XDsWFsYXIvIGhhY2VyIG5vdGFyCTAJMQkxClB1dCBhd2F5CUd1YXJkYXIvIG9yZGVuYXIJMAkwCTEKUHV0IG9mZglQb3Nwb25lci8gcmV0cmFzYXIJMAkwCTEKUHV0IG9uCVBvbmVyc2UvIGVuY2VuZGVyCTAJMQkxClB1dCBvdXQJQXBhZ2FyLyBleHRpbmd1aXIJMAkwCTEKUHV0IHVwIHdpdGgJU29wb3J0YXIvIGFndWFudGFyCTAJMAkxClJ1biBpbnRvCUVuY29udHJhcnNlIGNvbi8gY2hvY2FyIGNvbgkwCTAJMQpSdW4gb3V0IG9mCVF1ZWRhcnNlIHNpbi8gYWdvdGFyc2UJMAkxCTEKU2V0IHVwCUNvbmZpZ3VyYXIvIHByZXBhcmFyCTAJMQkxClNob3cgb2ZmCVByZXN1bWlyLyBsdWNpcnNlCTAJMQkxClNvcnQgb3V0CU9yZ2FuaXphci8gc29sdWNpb25hcgkwCTAJMQpUYWtlIGFmdGVyCVBhcmVjZXJzZSBhLyBzZWd1aXIgZWwgZWplbXBsbwkwCTAJMQpUYWtlIGF3YXkJUXVpdGFyLyBsbGV2YXJzZQkwCTAJMQpUYWtlIGJhY2sJUmV0aXJhci8gcmV0cmFjdGFyc2UJMAkwCTEKVGFrZSBvZmYJRGVzcGVnYXIvIHF1aXRhcnNlCTAJMQkxClRha2Ugb3ZlcglUb21hciBlbCBjb250cm9sLyBoYWNlcnNlIGNhcmdvCTAJMQkxClRoaW5rIG92ZXIJUmVmbGV4aW9uYXIvIGNvbnNpZGVyYXIJMAkwCTEKVGhyb3cgYXdheQlUaXJhci8gZGVzZWNoYXIJMAkxCTEKVHVybiBkb3duCVJlY2hhemFyLyBiYWphciBlbCB2b2x1bWVuCTAJMQkxClR1cm4gb2ZmCUFwYWdhci8gZGVzY29uZWN0YXIJMAkxCTEKVHVybiBvbglFbmNlbmRlci8gY29uZWN0YXIJMAkwCTAKVHVybiB1cAlBcGFyZWNlci8gc3ViaXIgZWwgdm9sdW1lbgkwCTEJMQpXYWtlIHVwCURlc3BlcnRhci8gZGVzcGVydGFyc2UJMAkxCTEKV2FybSB1cAlDYWxlbnRhci8gZW50cmFyIGVuIGNhbG9yCTAJMAkxCldhdGNoIG91dAlUZW5lciBjdWlkYWRvLyBlc3RhciBhbGVydGEJMAkxCTEKV29yayBvdXQJUmVzb2x2ZXIvIGhhY2VyIGVqZXJjaWNpbwkwCTEJMQpXcml0ZSBkb3duCUVzY3JpYmlyLyBhbm90YXIJMAkxCTEKV2hpbGUgYXQgaXQJTWllbnRyYXMgdGFudG8JMAkwCTE="
          }
        }
      },
      {
        "M": {
          "Id": {
            "S": "3"
          },
          "LastModified": {
            "S": "2023-11-20T14:20:25.502Z"
          },
          "Name": {
            "S": "Pharses 2"
          },
          "Words": {
            "S": "SGUgd2VudCB0byB0aGUgc3RvcmUgdG8gYnV5IG1pbGsJRnVlIGEgbGEgdGllbmRhIGEgY29tcHJhciBsZWNoZQkwCTAJMApJIHdlbnQgdG8gdGhlIHN0b3JlIGZvciBtaWxrCUZ1aSBhIGxhIHRpZW5kYSBwb3IgbGVjaGUJMAkwCTAKSXQgd2FzIGEgcXVhcnRlciB0byBzaXggd2hlbiBsZWZ0CUVyYSB1biBjdWFydG8gcGFyYSBsYXMgNiBjdWFuZG8gc2UgZnVlCTAJMAkwCklzIGZyZWVkCUVzIGxpYmVyYWRvCTAJMAkwCnRoZXkgd2VyZW4ndCBhbGxvd2VkIGluIGF0IGZpcnN0LCBidXQgdGhlbiB0aGV5IHdlcmUuIAlQcmltZXJvIG5vIGVyYW4gcGVybWl0aWRvcyBlbnRyYXIgeSBsdWVnbyBzaQkwCTAJMApUaGUgZ3VhcmQgbGVhbmluZyBpbiB0byB3aGlzcGVyCUVsIGd1YXJkaWEgc2UgaW5jbGluYSBwYXJhIHN1c3VycmFyCTAJMAkxCmhhcyBhbnlvbmUgYmVlbiBhYmxlIHRvIGRvIHRoaXM/IAlBbGd1bm8gaGEgcG9kaWRvIGhhY2VyIGVzdG8/IAkwCTAJMQpJJ2QgbGlrZSB0byBwb2ludCBvdXQgdGhhdCAJcXVpc2llcmEgc2XDsWFsYXIgcXVlCTAJMAkwCkRvIG5vdCBjb3ZldAlObyBjb2RpY2lhcgkwCTAJMQpCeSB0aGUgd2F5CVBvciBjaWVydG8JMAkwCTAKTm90IGV2ZW4gY2xvc2UJTmkgc2lxdWllcmEgY2VyY2EJMAkwCTAKU2VpemluZyBhbiBvcG9ydHVuaXR5IAlBcHJvdmVjaGFuZG8gdW5hIG9wb3J0dW5pZGFkIAkwCTAJMQpDb3ZldAlDb2RpY2lhcgkwCTAJMApJdHMgYWZmb3JkcyB0aGUgb3Bwb3J0dW5pdHkJT2ZyZWNlIGxhIG9wb3J0dW5pZGFkIAkwCTAJMApJIGhhdmUgdGhlIGhhYml0IG9mIHJ1bm5pbmcgZXZlcnkgbW9ybmluZwlUZW5nbyBlbCBow6FiaXRvIGRlIGNvcnJlciB0b2RhcyBsYXMgbWHDsWFuYXMgCTAJMAkwCklmIHRoZXJlIGlzIGFueSBwcm9ibGVtcyB3aXRoCVNpIGh1YmllcmEgYWxnw7puIHByb2JsZW1hIGNvbgkwCTAJMQpJbnRlbGxpZ2VuY2Ugd2l0aG91dCBrbm93bGVkZ2UgaXMgd29ydGhsZXNzLglMYSBpbnRlbGlnZW5jaWEgc2luIGNvbm9jaW1pZW50byBubyB2YWxlIG5hZGEgCTAJMAkwCkRyZWFkZWQgdGVycm9yaXN0IGVzY2FwZXMgZnJvbSBqYWlsCVRlbWlkbyB0ZXJyb3Jpc3RhIGVzY2FwYSBkZSBsYSBjw6FyY2VsIAkwCTAJMQpQZXJoYXBzIGl0cyBwb3dlciBzb3VyY2UgaGFzIGJlZW4gZGVwbGV0ZWQJUXVpesOhcyBzdSBmdWVudGUgZGUgYWxpbWVudGFjacOzbiBoYSBzaWRvIGFnb3RhZGEgCTAJMQkxCkhlIGJvcmluZyB5b3Ugd2l0aCBoaXMgaHVtZHJ1bSBsaWZlCUVsIHTDqSBhYnVycmUgY29uIHN1IHJ1dGluYXJpYSB2aWRhCTAJMAkxCldvcmRzIG11c3QgYmUgdHJhbnNmb3JtZWQgaW50byBkZWVkcy4JTGFzIHBhbGFicmFzIHNlIGRlYmVuIHRyYWR1Y2lyIGVuIG9icmFzCTAJMAkwCkkgaG9wZSB0aGlzIGhhcyBiZWVuIHVuZGVyc3Rvb2QJRXNwZXJvIGVzdG8gc2UgaGF5YSBlbnRlbmRpZG8JMAkwCTEKSSBoYXZlIGRhYmJsZWQgaW4gc3BhcmsJSGUgaW5jdXJzaW9uYWRvIGVuIHNwYXJrCTAJMQkxCkZvciB0YWdnaW5nIGVuZm9ybWVudAlQYXJhIGxhIGFwbGljYWNpw7NuIGRlbCBldGlxdWV0YWRvCTAJMAkxClZlcnkgbXlzdGVyaW91cyBidXQgd2VsbCBhdHRlc3RlZCBwaGVub21lbm9uCU11eSBtaXN0ZXJpb3NvIHBlcm8gYmllbiBhdGVzdGlndWFkbyBmZW5vbWVubwkwCTEJMQpLZWVwIGVuaGFuY2luZwlTaWdhIG1lam9yYW5kbwkwCTAJMApEaWZmZXJlbmNlIGxpZXMgaW4gdGhlaXIgcmV0dXJuIHZhbHVlcwlMYSBkaWZlcmVuY2lhIHJhZGljYSBlbiBzdXMgdmFsb3JlcyBkZSByZXRvcm5vCTAJMAkwCkNvbGxlY3RpbmcgbW9yZSBkYXRhIGlzIGFsbW9zdCBhbHdheXMgb3Zlcmxvb2tlZAlMYSByZWNvcGlsYWNpw7NuIGRlIG3DoXMgZGF0b3MgY2FzaSBzaWVtcHJlIHNlIHBhc2EgcG9yIGFsdG8JMAkxCTEKSXQgaXMgY29udmVuaWVudCB0byB1cyByZW1vdmUgaXQJTm9zIGNvbnZpZW5lIHF1aXRhcmxvCTAJMAkxCldoYXQgdG8gZG8gd2l0aCB0aGlzIHZhbHVlCVF1ZSBoYWNlIGNvbiBlc3RlIHZhbG9yPyAJMAkwCTAKSSBubyBsb25nZXIgaWRlbnRpZnkgYXMgYSBhcmNoaXRlY3QJWWEgbm8gbWUgaWRlbnRpZmljbyBjb21vIHVuIGFycXVpdGVjdG8gCTAJMAkwClRoZXkgYXJlIHRlYW0gY3V0IG91dCBvZiB0aGUgZXhpc3RpbmcgdGVhbQlTb24gdW4gZXF1aXBvIHNlcGFyYWRvIGRlbCBlcXVpcG8gZXhpc3RlbnRlCTAJMAkwCkkgd291bGQgcHJlZmVyIHRvIGhhdmUgaGFkCUh1Ymllc2UgcHJlZmVyaWRvIGhhYmVyIHRlbmlkbwkwCTAJMApGb3Jla25ldwlTYWLDrWEgZGUgYW50ZW1hbm8JMAkwCTAKSGUgZm9pc3RlZCBhbiB1bnJlYXNvbmFibGUgdGFzayBvbiB5b3UJVGUgaW1wdXNvIHVuYSB0YXJlYSBpcnJhem9uYWJsZQkwCTEJMQppcyBlcnJvciBwcm9uZQlFcyBwcm9wZW5zbyBhIGxvcyBlcnJvcmVzCTAJMQkxCkhlIHRyaWVkIHRvIHNuYXRjaCBoaXMgd2lmZQlFbCB0cmF0byBkZSBhcnJlYmF0YXIgYSBzdSBlc3Bvc2EJMAkwCTEKVGhlIHJlc3Qgb2YgdGhlIHRhc2tzCUVsIHJlc3RvIGRlIGxhcyB0YXJlYXMJMAkwCTAKRm9yIHRoZSBodXJyeSBJIGNvdWxkIG5vdCBkZWxpdmVyIHNvbWV0aGluZyBiZXR0ZXIJUG9yIGVsIGFwdXJvIG5vIHB1ZGUgZW50cmVnYXIgYWxnbyBtZWpvcgkwCTAJMApJdCBpcyBhIGNyZWF0dXJlIHdoaWNoIHJvYW1zIHRoZSBlYXJ0aCBhbG9uZQlFcyB1bmEgY3JpYXR1cmEgcXVlIGRlYW1idWxhIGxhIHRpZXJyYSBzb2xhCTAJMAkxCkxlZnQgaXMgdHJ5aW5nIHRvIGNvbnZpbmNlIG1lIHRoYXQJTGEgaXpxdWllcmRhIGVzdGEgdHJhdGFuZG8gZGUgY29udmVuY2VyIG1lIHF1ZQkwCTEJMQpZb3Ugd2VyZSB1cHNldCB5ZXN0ZXJkYXkJRXN0YWJhcyBtb2xlc3RvIGF5ZXIJMAkwCTAKVGhlcmUgaXMgYWx3YXlzIHJvb20gdG8gaW1wcm92ZQlTaWVtcHJlIGhheSBlc3BhY2lvIHBhcmEgbWVqb3JhcgkwCTAJMApUbyBqdXN0aWZ5IHN0YXJ0aW5nIG9mIHlvdSBjYXJyZXIJUGFyYSBqdXN0aWZpY2FyIGVsIGluaWNpbyBkZSBzdSBjYXJyZXJhCTAJMAkwCklzIHN1aXRlcglFcyBsbyBtYXMgYWRlY3VhZG8JMAkwCTAKYmUgc3RlYWx0aHkJU2Ugc2lnaWxvc28JMAkwCTAKWW91IGtub3cgbm90IHdoYXQgeW91ciBhY3Rpb25zIHdvdWxkIHVubGVhc2gJTm8gc2FiZXMgbG8gcXVlIGRlc2VuY2FkZW5hcsOtYW4gdHVzIGFjY2lvbmVzCTAJMAkxCkFub3RoZXIgc3RyYXkgY2F0IHRoYXQgbmVlZHMgYSBib3dsIG9mIG1pbGsJT3RybyBnYXRvIGV4dHJhdmlhZW8gcXVlIG5lY2VzaXRhIHVuIHRhesOzbiBkZSBsZWNoZQkwCTEJMQpUaGlzIEJpbGRlcmJlcmcgYXR0ZW5kZWUgc25lZXJlZCBhdCBvdXIgY2FtZXJhCUVzdGUgYXNpc3RlbnRlIGRlIEJpbGRlcmJlcmcgc2UgYnVybMOzIGRlIG51ZXN0cmEgY8OhbWFyYQkwCTAJMApIb3cgZGlkIGl0IGdvPyAJwr9Db21vIGxlIGZ1ZT8JMAkwCTAKSSBkYXJlIHlvdQlUZSByZXRvCTAJMAkwCkJ1dCB0aGlzIG1heSBoZWxwCVBlcm8gZXN0byBwb2RyaWEgYXl1ZGFyIAkwCTEJMApUaGlzIGNvdWxkIGJlIHVzZWQgZm9yCUVzdG8gcG9kcsOtYSBzZXJ2aXIgcGFyYQkwCTAJMQpJIGhhdmVuJ3QgYmVlbiBhYmxlIHRvIGZpbmlzaCB5ZXQJTm8gaGUgcG9kaWRvIHRlcm1pbmFyIGF1bgkwCTAJMApUaGlzIHdhcyB1c2VkIGJ5IHRoZSB0ZWFtCUVzdG8gZnVlIGFwcm92ZWNoYWRvIHBvciBlbCBlcXVpcG8gCTAJMAkwClBlYWNlIHJlbWFpbnMgdGhlIGZvcmVtb3N0IGNoYWxsZW5nZSBvZiBvdXIgdGltZXMuCUxhIHBheiBzaWd1ZSBzaWVuZG8gZWwgcHJpbmNpcGFsIGRlc2Fmw61vIGRlIG51ZXN0cm8gdGllbXBvLgkwCTEJMQpUaGUgcGlvbmVlcmluZyBzcGlyaXQgZHJpdmVzIHBlb3BsZSBvbndhcmQJRWwgZXNww61yaXR1IHBpb25lcm8gaW1wdWxzYSBhIGxhcyBwZXJzb25hcyBoYWNpYSBhZGVsYW50ZQkwCTAJMQpUaGUga2lkcyBhdCB0aGUgc2Nob29sIHNoZSB3b3JrcyBhdAlMb3MgbmnDsW9zIGRlIGxhIGVzY3VlbGEgZW4gbGEgcXVlIHRyYWJhamEJMAkwCTEKVGhhdCBydW5zIHRoZSByaXNrIG9mIGJlaW5nIHdyb25nCUVzbyBjb3JyZSBlbCByaWVzZ28gZGUgZXN0YXIgZXJyb25lbwkwCTAJMApUaGV5IG11c3Qgc3RyaXZlIHdpdGhvdXQgZGVsYXkgdG8gY29tcGxldGUgaGlzIHRhc2tzCUVsbG9zIGRlYmVuIGVzZm9yemFyc2Ugc2luIGRlbW9yYSBwYXJhIGNvbXBsZXRhciBzdXMgaGlzdG9yaWFzCTAJMAkwCml0IGRvZXMgbm90IGRlcGVuZCBvbiBodW1hbiB3aWxsIG9yIGVmZm9ydCBidXQgb24gR29kCU5vIGRlcGVuZGUgZGUgdm9sdW50YWQgaHVtYW5hIG8gZXNmdWVyem8gc2lubyBkZSBEaW9zCTAJMAkwClRoZSBpZGVhIGlzIHRvIGF2YWlsIHRoZSBiZW5lZml0cwlMYSBpZGVhIGVzIGFwcm92ZWNoYXIgbG9zIGJlbmVmaWNpb3MJMAkwCTAKVGhleSBhcmUgbm93IHllbGxpbmcgYWJvdXQJQWhvcmEgZXN0w6FuIGdyaXRhbmRvIHF1ZQkwCTAJMApzb21ldGhpbmcgaGFzIHRvIGNoYW5nZQlBbGdvIHRpZW5lIHF1ZSBjYW1iaWFyCTAJMQkxClRoZSBwZW9wbGUgdGhhdCBzdGF5IHNpbGVudCBhYm91dCB0d28gZG96ZW4gc2hvb3RpbmdzCUxhIGdlbnRlIHF1ZSBwZXJtYW5lY2UgZW4gc2lsZW5jaW8gc29icmUgZG9zIGRvY2VuYXMgZGUgdGlyb3Rlb3MJMAkwCTEKdGhleSBrbmV3IHRoYXQgb3ZlciB0aW1lCXNhYsOtYW4gcXVlIGNvbiBlbCB0aWVtcG8JMAkwCTEKRHVkZSwgZGlkIEkgY2FsbCBpdCBvciB3aGF0PwlBbWlnbywgdGUgbG8gZGlqZSBvIG5vPyAJMAkwCTAKSSB3YXMgdG9sZCBub3QgdG8gd29ycnkgYWJvdXQgCU1lIGRpamVyb24gcXVlIG5vIG1lIHByZW9jdXBhcmEJMAkwCTAKV2hvIHdvdWxkIGhhdmUgdGhvdWdodCB0aGF0CVF1aWVuIGh1YmllcmEgcGVuc2FkbyBlc28JMAkwCTEKV2hhdCBpcyBpbiB0aGUgZW52ZWxvcD8gCVF1ZSBoYXkgZW4gZWwgc29icmU/IAkwCTAJMApJbiBhIGJpZCB0byBkZWxpdmVyCUVuIHVuIGludGVudG8gcG9yIGVudHJlZ2FyCTAJMAkxClRvIGtlZXAgaXQgaW50YWN0CVBhcmEgbWFudGVuZXJsbyBpbnRhY3RvCTAJMAkwCkl0IGNvbWVzIGFjcm9zcyB0byBtZSBhcyB5b3UgYXJlIGEgYml0IHVwc2V0CU1lIGRhIGxhIGltcHJlc2nDs24gcXVlIGVzdGFzIHVuIHBvY28gbW9sZXN0bwkwCTAJMQpTbyBJIHN0YXJ0ZWQganVzdCB3aGVyZSBJIGxlZnQgb2ZmLglBc8OtIHF1ZSBlbXBlY8OpIGp1c3RvIGRvbmRlIGxvIGRlasOpLgkwCTEJMQpGcm9tIGluY2VwdGlvbiAJRGVzZGUgc3UgaW5pY2lvIAkwCTAJMQpUaGUgd2hvbGUgZ3JvdXAgY29uc2lzdHMgb2Ygc3R1ZGVudHMJVG9kbyBlbCBncnVwbyBlc3TDoSBmb3JtYWRvIHBvciBlc3R1ZGlhbnRlcwkwCTAJMApJcyB3b3J0aCBtb3JlIHRoYW4JVmFsZSBtYXMgcXVlCTAJMAkwCklmIG9ubHkgdGhlcmUgd2VyZSBhIGNsdWUJU2kgdGFuIHNvbG8gaHViaWVyYSB1bmEgcGlzdGEJMAkwCTEKbm9ib2R5IGdvdCB0byBzZWUJTmFkaWUgcHVkbyB2ZXIJMAkwCTEKVG9vayBpdCBkb3duCURlcnJpYsOzCTAJMAkwClRoZSByZXN0IHdlcmUgaGFyZGVuZWQJRWwgcmVzdG8gZnVlIGVuZHVyZWNpZG8JMAkxCTEKUGxlYXNlIHRyeSBlaXRoZXIgb2YgdGhvc2UgY29tbWFuZHMJUG9yIGZhdm9yIGludGVudGEgY3VhbHF1aWVyYSBkZSBlc3RvcyBjb21hbmRvcyAJMAkwCTAKU2F5IGl0IGlzCURpY2hvIGVzdG8JMAkwCTAKVGhleSBzdHJlc3MgYWdhaW4gdGhlIGltcG9ydGFuY2UJc3VicmF5YW4gbGEgaW1wb3J0YW5jaWEJMAkwCTAKV2VsbCBqdXN0IGZvciByZWNvcmQJQnVlbm8sIHNvbG8gcGFyYSBxdWUgY29uc3RlCTAJMAkwCkkgY2FuIG5vIGxvbmdlciBwdXJzdWUJWWEgbm8gcHVlZG8gc2VndWlyCTAJMAkwCkltIG5vIGxvbmdlciBnZXR0aW5nIG1hcnJpZWQJWWEgbm8gbWUgdm95IGEgY2FzYXIgCTAJMAkwCk15IGZpYW5jw6kgcGFzc2VkCU1pIHByb21ldGlkbyBmYWxsZWNpw7MgCTAJMQkxCldlIGFyZSBubyBsb25nZXIgaW4gYW4gZW1lcmdlbmN5CVlhIG5vIGVzdGFtb3MgZW4gZW1lcmdlbmNpYQkwCTAJMApJdCdzIGNydWNpYWwgaGUgb3ducyB0aGUgY29tcGFueSAJRXMgY3J1Y2lhbCBxdWUgc2VhIGVsIGR1ZcOxbyBkZSBsYSBlbXByZXNhLgkwCTEJMQpUaGF0J3MgbGFyZ2VseSBiZWNhdXNlIHRoaXMJRXNvIGVzIGVuIGdyYW4gcGFydGUgcG9ycXVlCTAJMQkxClNvbWV0aW1lcyBtaWdodCB3YW50IHRvIHVzZQlBIHZlY2VzIHB1ZWRlcyBxdWVyZXIgdXNhcgkwCTEJMQpUaGlzIGludGVydmlldyBoYXMgYWdlZCBsaWtlIGEgZmluZSB3aW5lCUVzdGEgZW50cmV2aXN0YSBoYSBlbnZlamVjaWRvIGNvbW8gdW4gYnVlbiB2aW5vCTAJMQkxClRoZSBmb3JtIGRhdGEgaXMgaGFuZGVkIGJ5IHRoZSBET00gCUxvcyBkYXRvcyBkZWwgZm9ybXVsYXJpbyBzb24gY29udHJvbGFkb3MgcG9yIGVsIERPTQkwCTAJMQpJZiB0aGVyZSdzIG9uZSB0aGluZyBJIGhvcGUgd2UndmUgYWxsIGxlYXJuZWQJU2kgaGF5IGFsZ28gcXVlIGVzcGVybyBxdWUgdG9kb3MgaGF5YW1vcyBhcHJlbmRpZG8JMAkwCTEKVG8gZ2V0IHRvIGdyaXAgd2l0aCAJSGFjZXIgZnJlbnRlIGEJMAkwCTEKd2l0aG91dCBmdXJ0aGVyIGFkbwlTaW4gbWFzIHByZcOhbWJ1bG9zCTAJMAkxCkV2ZW4gdGhvdWdoIHRoZXkncmUgc3BlbGxlZCB0aGUgc2FtZQlBdW5xdWUgc2UgZXNjcmliYW4gaWd1YWwJMAkwCTAKV2UncmUgZmVlZCB1cAllc3RhbW9zIGhhcnRvcwkwCTAJMApub3cgaSdtIHVub2NjdXBpZWQJQWhvcmEgZXN0b3kgZGVzb2N1cGFkbwkwCTAJMQpBIGZyaWVuZCBvZiBtaW5lCVVuIGFtaWdvIG1pbwkwCTAJMApJIGhhdmUgbmV2ZXIgaGFkIHRoZSBvcHRpb24gdG8gbW92ZQlOdW5jYSBoZSB0ZW5pZG8gbGEgb3BjacOzbiBkZSBtdWRhcm1lCTAJMQkwCkkgZGlkbnQgaGF2ZSBhIGRldmVsb3BtZW50IHRoYXQgaGUgbmVlZGVkCVlvIG5vIHRlbsOtYSB1biBkZXNhcnJvbGxvIHF1ZSDDqWwgbmVjZXNpdGFiYQkwCTAJMApJIG1lbnRpb25lZCB0aGF0IGkgbWFkZSBhIGNvbW1pdG1lbnQgdG8gaGltIHRvIGhhdmUgdGhhdAlNZW5jaW9uw6kgcXVlIG1lIGNvbXByb21ldMOtIGNvbiDDqWwgYSB0ZW5lciBlc28JMAkwCTAKSW4gYSBiaWQgdG8gY29tYmF0CUVuIHVuIGludGVudG8gcG9yIGNvbWJhdGlyCTAJMAkwCmdvdHRhIGdldCB1c2VkIHRvIGl0IGZpcnN0CXByaW1lcm8gdGVuZ28gcXVlIGFjb3N0dW1icmFybWUJMAkwCTAKV2UncmUgb25seSBnZXR0aW5nIHN0YXJ0ZWQJRXN0YW1vcyByZWNpZW4gZW1wZXphbmRvCTAJMAkwCk15IG9sZGVyIGNoaWxkCU1pIGhpam8gbWF5b3IJMAkwCTAKSG93IG11Y2ggbW9yZT8JQ3VhbnRvIG1hcz8JMAkxCTEKTXVjaCBsaWtlCUFsIGlndWFsIHF1ZQkwCTAJMQpNdXkgbGF0ZSBmYXRoZXIJTWkgZGlmdW50byBwYWRyZQkwCTEJMQpXaXRob3V0IGZ1cnRoZXIgYWRvCVNpbiBkZW1vcmEJMAkwCTAKQXQgdGhlIG1vbWVudAlFbiBlc3RlIG1vbWVudG8JMAkwCTAKU2Vuc2l0aXZlCVNlbnNpYmxlCTAJMAkwClNlbnNpYmxlIG9wdGlvbglTZW5zYXRhIG9wY2nDs24JMAkwCTAKSSdsbCBuZWVkIGFzc2lzdGVuY2UJTmVjZXNpdGFyw6kgYXl1ZGEJMAkxCTEKSW50ZW5kCVByZXRlbmRlcgkwCTAJMApQcmV0ZW5kCUZpbmdpcgkwCTAJMApHb2Qgb25jZSBzbW90ZSBTb2RvbQlEaW9zIHVuYSB2ZXogY2FzdGlnbyBhIFNvZG9tYQkwCTAJMQp3aGlsZSB0aGUgcHJpY2VzIGFyZSBzaG9vdGluZyB1cCB0aGUgY29udGVudHMgb2YgcGFja2V0cyBhcmUgbXVjaCBtb3JlIG1lYXNseQlNaWVudHJhcyBlbCBwcmVjaW8gc2UgZGlzcGFyYSBlbCBjb250ZW5pZG8gZGUgbG9zIHBhcXVldGVzIGVzIG11Y2hvIG3DoXMgbcOtc2VybwkwCTAJMQpIZSBicm91Z2h0IHVwIHRoZSBpc3N1ZQlTYWNvIGVsIHRlbWEJMAkwCTAKLk5leHQgV2lsbCBiZSBhIHNpZ25pZmljYW50IHN0ZXAgZm9yd2FyZAkuTmV0IHNlcsOhIHVuIGltcG9ydGFudGUgcGFzbyBhZGVsYW50ZQkwCTAJMQpCZWluZyByaWdodCBoYWxmIHRpbWUgQmVhdHMgYmVpbmcgaGFsZiByaWdodCBhbGwgdGltZQlUZW5lciByYXrDs24gbGEgbWl0YWQgZGUgbGFzIHZlY2VzIGVzIG1lam9yIHF1ZSB0ZW5lciBsYSBtaXRhZCBkZSByYXpvbiB0b2RvIGVsIHRpZW1wbwkwCTAJMQpIZSBub3cgcGxhbnMgdG8gcHV0IGl0IHVwIHRvCUFob3JhIHBsYW50ZWEgc3ViaXJsbyBhCTAJMAkwCkl0IHNlZW1zIHRvIGhhdmUgc28gbXVjaCBnb2luZyBmb3IgSXQJUGFyZWNpYSB0ZW5lciBtdWNobyBhIHN1IGZhdm9yCTAJMAkwCm5vdGhpbmcgaXMgYnkgY2hhbmNlCU5hZGEgZXMgY2FzdWFsaWRhZAkwCTAJMApIb3cgYXJlIHdlIGdvaW5nIHRvIG1ha2Ugc3VyZSB0aGF0IHRoZSB2ZXJzacOzbiBpcyBvaz8JQ29tbyBub3MgdmFtb3MgYSBhc2VndXJhciBkZSBxdWUgbGEgdmVyc2lvbiBlc3RhIGJpZW4/CTAJMAkxCldobyBlbHNlIHdvdWxkIHZvdGUgZm9yIHdlICB0byBjb21lIG91dCBlYXJseQlRdWnDqW4gdm90YXLDrWEgcG9yIGlyc2UgdGVtcHJhbm8JMAkwCTAKVGVsbCBtZSBhYm91dCB5b3VyIGFjY29tcGxpc2htZW50cwlDdWVudGFtZSBkZSB0dXMgbG9ncm9zCTAJMAkxCmlmIGl0IGhhZG7igJl0IGJlZW4gZ2l2ZW4geW91IGZyb20gYWJvdmUJc2kgbm8gaHViaWVzZSBzaWRvIGRhZG8gZGVzZGUgYXJyaWJhCTAJMAkwCndoYXQgaGF2ZSB0aGV5IGRvbmU/CVF1ZSBoYW4gaGVjaG8/CTAJMAkwCkZvciBleGFtcGxlLCB0aGUgZm9sbG93aW5nIGNvZGUJUG9yIGVqZW1wbG8sIGVsIHNpZ3VpZW50ZSBjw7NkaWdvCTAJMQkxCkFzIG9mIE5vdmVtYmVyIDIzIHRoZSBnb3Ygbm8gbG9uZ2VyIGVuZm9yY2luZyBpdHMgbWlzaW5mb3JtYXRpb24gcG9saWN5CUEgcGFydGlyIGRlbCAyMyBkZSBub3ZpZW1icmUsIGVsIGdvYmllcm5vIHlhIG5vIGFwbGljYSBzdSBwb2zDrXRpY2EgZGUgZGVzaW5mb3JtYWNpw7NuLgkwCTAJMApJJ3ZlIHJhbiBpbnRvIHNpbWlsYXIgcHJvYmxlbXMJTWUgaGUgZW5jb250cmFkbyBjb24gcHJvYmxlbWFzIHNpbWlsYXJlcwkwCTAJMApJZiB5b3Ugb25seSBrbmV3IHdoYXQgd2FzIGhpZGRlbiBpbiB0aGUgYXJjaGl2ZXMJU2kgc3VwaWVyYXMgbG8gcXVlIGVzdMOhIGVzY29uZGlkbyBlbiBsb3MgYXJjaGl2b3MJMAkwCTAKSXQgd291bGRu4oCZdCBzdXJwcmlzZSBtZSBpZglObyBtZSBzb3JwcmVuZGVyw61hIHNpCTAJMAkwCndoaWNoIGNhbiBhY3R1YWxseSBiZSBhbnRpIGVzdHJvZ2VuaWMuCVF1ZSBlbiByZWFsaWRhZCBwdWVkZW4gc2VyIGFudGllc3Ryb2dlbm9zCTAJMAkwCkkndmUgYmVlbiB0b2xkIG15IGhvdXNlIGlzIGEgZHVtcAlNZSBoYW4gZGljaG8gcXVlIG1pIGNhc2EgZXMgdW4gYmFzdXJlcm8JMAkwCTAKVGhlIGVjb25vbXkgaXMgcmlnZ2VkCUxhIGVjb25vbcOtYSBlc3RhIG1hbmlwdWxhZGEJMAkwCTAKaW50ZW5kZWQgdG8gZmluYW5jaWFsbHkgZW5zbGF2ZSB5b3UJRGVzdGluYWRvIGEgZXNjbGF2aXphcnRlIGZpbmFuY2llcmFtZW50ZQkwCTAJMQpIZSB3YXMgYWhlYWQgb2YgaGlzIHRpbWUJRWwgZnVlIHVuIGFkZWxhbnRhZG8gYSBzdSB0aWVtcG8JMAkwCTAKVGhlcmUgaXMgYSBnb3QgdG8gYmUgYSB3YXkJVGllbmUgcXVlIGhhYmVyIHVuYSBtYW5lcmEJMAkwCTAKSSB3aXNoIEkgaGFkIG1vcmUgdGltZQlIdWJpZXNlIGRlc2VhZG8gaGFiZXIgdGVuaWRvIG3DoXMgdGllbXBvCTAJMAkwCkkgd291bGQgaGF2ZSBsaWtlZCB0byBoYXZlIGhhZAlodWJpZXNlIHF1ZXJpZG8gaGFiZXIgdGVuaWRvCTAJMAkwCkdvdCBib3JpbmcJc2Ugdm9sdmnDsyBhYnVycmlkbwkwCTAJMApJIHdpc2ggbW9yZSBoYWQgbGlzdGVuZWQJRGVzZWFyw61hIHF1ZSBtw6FzIGh1YmllcmFuIGVzY3VjaGFkbwkwCTAJMApNYW55IGNhbGxlZCBtZSBjcmF6eQlNdWNob3MgbWUgbGxhbWFyb24gbG9jbwkwCTAJMApIb3cgZGlkIHdlIGdvIGZyb20gdGhpcyB0byB0aGlzPwnCv0PDs21vIHBhc2Ftb3MgZGUgZXN0byBhIGVzdG8/CTAJMAkwCnRoZSBmaXJzdCBzdGVwIHlvdSBzaG91bGQgZG8gaXMJRWwgcHJpbWVyIHBhc28gcXVlIGRlYmVyw61hcyBoYWNlciBlcwkwCTAJMAp0aG9zZSB0aGF0IGRvbuKAmXQgcmVxdWlyZSBjbGVhbnVwLCBhbmQgdGhvc2UgdGhhdCBkbwlBcXVlbGxvcyBxdWUgbm8gcmVxdWllcmVuIGxpbXBpZXphLCB5IGFxdWVsbG9zIHF1ZSBzaQkwCTAJMQpyaWdodCBhZnRlciBSZWFjdCBtYWtlcyBjaGFuZ2VzIHRvIHRoZSBET00JanVzdG8gZGVzcHXDqXMgcXVlIFJlYWN0IGhhZ2EgY2FtYmlvcyBlbiBlbCBET00JMAkwCTAKV2hhdCBkb2VzIHVzZUVmZmVjdCBkbz8JUXVlIGhhY2UgdXNlRWZmZWN0PwkwCTEJMQpJZiB5b3Ugc3RpbGwgZmVlbCAJc2kgYcO6biBhc8OtIHNpZ3VlcyBzaW50aWVuZG8JMAkwCTAKU3VwcG9ydGluZyBhIGZhbWlseSBjYW4gYmUgdmVyeSBkaWZmaWN1bHR5CU1hbnRlbmVyIGEgdW5hIGZhbWlsaWEgcHVlZGUgc2VyIG11eSBkaWbDrWNpbC4JMAkwCTEKQW5kIGRpZG50IGhhdmUgbWVyY3kgb24gdGhlIHdvcmxkCVkgbm8gdHV2byBwaWVkYWQgZGVsIG11bmRvCTAJMQkxCk5vdCB0byBicm9rZW4gc29tZXRoaW5nCU5vIHNlYSBxdWUgc2Ugcm9tcGEgYWxnbwkwCTAJMAoJCTAJMAkw"
          }
        }
      },
      {
        "M": {
          "Id": {
            "S": "14"
          },
          "LastModified": {
            "S": "2023-12-01T17:58:46.164Z"
          },
          "Name": {
            "S": "English/spanish (Simple Word) II"
          },
          "Words": {
            "S": "c3F1aXNoCWFwbGFzdGFyCTAJMAkwCnN0b3ZlCWVzdHVmYQkwCTAJMApkb25uaW5nCXBvbmVyc2UJMAkwCTAKc3RlYWsJYmlzdGVjCTAJMAkwCnJvYXN0CXRvc3RhZG8gLyBhc2FkbwkwCTAJMApzbGVldmVzCW1hbmdhcwkwCTAJMApuYXN0eQlhc3F1ZXJvc28JMAkwCTAKaGVjawlpbmZpZXJubwkwCTAJMApvYXRoCWp1cmFtZW50bwkwCTAJMApmZWFzdAlmZXN0aW4JMAkwCTAKd2lncwlwZWx1Y2EJMAkwCTAKanVzdCBvZmYJanVzdG8gZnVlcmEvanVzdG8gYWwgbGFkbwkwCTAJMAp0ZW50cwl0aWVuZGFzCTAJMAkwCmJlbmNoCWJhbmNvCTAJMAkwCmhvbmtpbmcJdG9jYXIgbGEgYm9jaW5hCTAJMAkwCmp1bmt5CWRyb2dhZG8JMAkwCTAKc2hvY2tlcglzb3JwcmVzYSBkZXNhZ3JhZGFibGUJMAkwCTAKc2hlZXIJcHVybwkwCTAJMApjYW5vcHkJdG9sZG8JMAkwCTAKdHJhZGVycwljb21lcmNpYW50ZXMJMAkwCTAKcGlubmFjbGUJcGluYWN1bG8JMAkwCTAKc2h1dHRsaW5nCVRyYW5zcG9ydGFuZG8JMAkwCTAKY2hvcHBlZAlwaWNhZG8JMAkwCTAKaXQncyB1cCB0aGVyZQllc3RhIGFoaSBhcnJpYmEJMAkwCTAKbWVhbHMJY29taWRhCTAJMAkwCnRlYXIJbGFncmltYQkwCTAJMApjYXR0bGUJdmFjdW5vL2dhbmFkbwkwCTAJMAp0cmVtYmxlZAllc3RyZW1lY2Vyc2UJMAkwCTAKd2FyZHJvYmUJYXJtYXJpbwkwCTAJMApwb3VuY2gJZ29scGUJMAkwCTAKd2hlbGxzYmFycm93cwljYXJyZXRpbGxhcwkwCTAJMApibGVtaXNoZXMJZGVmZWN0b3MJMAkwCTAKdG91Z2gJZnVlcnRlL2R1cm8JMAkwCTAKY2hlYXBza2F0ZQl0YWNhw7FvCTAJMAkwCnNwbGFzaCBvdXQJc2FscGljYXIJMAkwCTAKbGVhdGhlciBqYWNrZXQJY2hhcXVldGEgZGUgY3Vlcm8JMAkwCTAKdG9wIG9mIHRoZSByYW5nZQlsbyBtYXMgY2FybwkwCTAJMApzaGVkCWNvYmVydGl6bwkwCTAJMApleWVzb3JlCWZlbyBhIGxhIHZpc3RhIC8gbW9uc3Ryb3NpZGFkCTAJMAkwCnN0YXJ2ZQlwYXNhciBoYW1icmUJMAkwCTAKaGF1bnRlZAlvYnNlc2lvbmFkbwkwCTAJMApzdGFzaAllc2NvbmRpdGUJMAkwCTAKZnJpZ3RoZW5pbmcJZXNwYW50b3NvCTAJMAkwCnVuZGVybmVhdGgJZGViYWpvCTAJMAkwCnNjcm9sbAlkZXNwbGF6YXJzZQkwCTAJMApzdHVubmluZwltYXJhdmlsbG9zbwkwCTAJMApyYWcJYXJhcG8JMAkwCTAKZmxhaXIJaW5zdGludG8JMAkwCTAKdHVuZQl0b25hZGEJMAkwCTAKc2hyb3VkcwllbCB2ZWxvCTAJMAkwCnBlbm55CWNlbnRpbW8JMAkwCTAKdXBicmluZ2luZwllZHVjYWNpb24JMAkwCTAKdGF1Z2h0CWVuc2XDsW8JMAkwCTAKcmVmcmFpbgllc3RyaWJpbGxvCTAJMAkwCnBvdW5jaAlnb2xwZQkwCTAJMAp3aGVsbHNiYXJyb3dzCWNhcnJldGlsbGFzCTAJMAkwCmJsZW1pc2gJZGVmZWN0bwkwCTAJMAp0b3VnaAlkaWZpY2lsCTAJMAkwCmNoZWFwc2thdGUJdGFjYcOxbwkwCTAJMApzcGxhc2ggb3V0CXNhbHBpY2FyCTAJMAkwCmxlYXRoZXIgamFja2V0CWNoYXF1ZXRhIGRlIGN1ZXJhCTAJMAkwCnRvcCBvZiB0aGUgcmFuZ2UJbG8gbWFzIGNhcm8JMAkwCTAKc2hlZAljb2JlcnRpem8JMAkwCTAKZXllc29yZQlmZW8gYSBsYSB2aXN0YSAvIG1vbnN0cm9zaWRhZAkwCTAJMApzdGFydmUJbW9yaXIgZGUgaGFtYnJlCTAJMAkwCmR3aW5kbGluZwltZW5ndWFuZG8JMAkwCTAKaGF1bnRlZAlvYnNlc2lvbmFkbwkwCTAJMApzdGFzaAllc2NvbmRpdGUJMAkwCTAKZnJpZ3RoZW5pbmcJZXNwYW50b3NvCTAJMAkwCnVuZGVybmVhdGgJZGViYWpvIAkwCTAJMApzY3JvbGwJZGVzcGxhemFyc2UJMAkwCTAKc3R1bm5pbmcJbWFyYXZpbGxvc28JMAkwCTAKc2xlZXZlcwltYW5nYXMJMAkwCTAKcmFnIHRyYWRlCWNvbWVyY2lvIGRlIHRyYXBwb3MJMAkwCTAKZmxhaXIJaW5zdGludG8JMAkwCTAKdHVuZQltZWxvZGlhCTAJMAkwCnNocm91ZHMJZWwgdmVsbwkwCTAJMApwZW5ueQlwZW5pcXVlCTAJMAkwCmJvd2wJdGF6b24JMAkwCTAKdXBicmluZ2luZwllZHVjYWNpb24JMAkwCTAKYW1lbmQJZW5tZW5kYXIJMAkwCTAKc3dpbmcJb3NjaWxhciAvIGNhbWJpYXIJMAkwCTAKYmFsbG90CXZvdGFjaW9uCTAJMAkwCnJpZ2dlZAlhbWHDsWFyCTAJMAkwCndpZGVzcHJlYWQJZXh0ZW5kaWRvL2FtcGxpbwkwCTAJMApuYXN0aW5lc3MJc3VjaWVkYWQJMAkwCTAKam9sbHkJZGl2ZXJ0aWRvCTAJMAkwCnBva2luZwllbXB1amFkbwkwCTAJMApwb2tpbmcgZnVuCWJ1cmxhcnNlCTAJMAkwCnNwdXJyZWQJZXN0aW11bGFkbwkwCTAJMApub3Rld29ydGh5CW5vdGFibGUJMAkwCTAKc2hvcmUJYXB1bnRhbGFyCTAJMAkwCmJhY2t5YXJkCXBhdGlvIGludGVyaW9yCTAJMAkwCmdldCByaWQJZGVzaGFjZXJzZQkwCTAJMApyZXZvbHZlcwlnaXJhCTAJMAkwCmZvb2RpZQljb25vY2Vkb3IgZ291cm1ldAkwCTAJMAplbmdhZ2VtZW50CWNvbXByb21pc28JMAkwCTAKbWlkdG93bgljZW50cm8gZGUgbGEgY2l1ZGFkCTAJMAkwClVwdG93bglab25hIHJlc2lkZW5jaWFsCTAJMAkwCm92ZXJsb29raW5nCWNvbiB2aXN0YSBhCTAJMAkwCmdyb2Nlcmllcwljb21lc3RpYmxlcwkwCTAJMAp0aXBwZWQJaW5jbGluYWRvCTAJMAkwCmdyb2NlcnkJYWxtYWNlbgkwCTAJMApoYWlyZHJlc3NlcglwZWx1cXVlcm8JMAkwCTAKV2UnbGwgY29uZmlndXJlIG9uY2UgZm9yIGFsbCB0ZXN0cwlDb25maWd1cmFyZW1vcyB1bmEgdmV6IHBhcmEgdG9kYXMgbGFzIHBydWViYXMJMAkwCTAKSSBoYWQgdGhlIGJhZCBsdWNrIG9mCVR1dmUgbGEgbWFsYSBzdWVydGUgCTAJMAkwClNpZGUgSHVzdGxlCVNlZ3VuZG8gdHJhYmFqbwkwCTAJMApzaG9ydCBvZiBiZWluZwlDYXNpCTAJMAkwCkhlIHNwZW50IGhvdXJzIGZ1c3Npbmcgd2l0aCB0aGUgc2V0dGluZ3Mgb2YgaGlzIHBjCVBhc28gaG9yYXMgY29tcGxpY8OhbmRvc2UgY29uIGxhIGNvbmZpcm1hY2nDs24gZGUgc3UgcGMJMAkwCTAKVGFnbGUJRW5yZWRvCTAJMAkwClJhbiBpbnRvIHRoZSBzYW1lIGlzc3VlCVR1dmUgZWwgbWlzbW8gcHJvYmxlbWEJMAkwCTAKaG93IG9mdGVuIGRvZXMgaXQgcnVuPwlRdWUgdGFuIHNlZ3VpZG8gc2UgZWplY3V0YT8JMAkwCTAKSXQgbWFrZXMgbWUgY29sZAlNZSBkYSBmcmlvCTAJMAkwCkRyaW5rIHRvIGRyb3duIHRoZSBzb3Jyb3dzCVRvbWFyIHBhcmEgYWhvZ2FyIGxhcyBwZW5hcwkwCTAJMA=="
          }
        }
      },
      {
        "M": {
          "Id": {
            "S": "13"
          },
          "LastModified": {
            "S": "2023-12-03T20:16:56.973Z"
          },
          "Name": {
            "S": "English / Spanish (All 5)"
          },
          "Words": {
            "S": "c3RhZ2luZy9lc3NheQllbnNheW8JMAkxCTEKc3RhZ2luZyBhcmVhCWFyZWEgZGUgZW5zYXlvCTAJMQkxCnN0YWlycwllc2NhbGVyYQkwCTAJMQpzdGFsZQlyYW5jaW8JMAkwCTEKc3RhbGxlZAllc3RhbmNhZG8JMAkwCTEKc3RhbXAJc2VsbG8JMAkwCTEKc3RhbmNlL3Bvc3R1cmUJcG9zdHVyYQkwCTAJMApzdGFuZHBvaW50L3BvaW50IG9mIHZpZXcJcHVudG8gZGUgdmlzdGEJMAkxCTEKc3RhcGxlCWdyYXBhCTAJMAkxClNub29wL2N1cmlvdXMJQ3VyaW9zbwkwCTEJMQpzdGFycmVkCVByb3RhZ29uaXphZG8JMAkxCTEKc3RhcnZlCWRlIGhhbWJyZQkwCTEJMQpzdGF0ZWQvc2F5ZWQJYWZpcm1vCTAJMQkxCnN0YXRlZCBhYm92ZQlzZSBpbmRpY28gYW50ZXJpb3JtZW50ZQkwCTAJMQpzdGF0ZW1lbnQJZGVjbGFyYWNpb24JMAkwCTAKc3RhdW5jaC9sb3lhbHR5CWxlYWx0YWQJMAkwCTEKc3RheWluZwlxdWVkYXJzZQkwCTAJMApzdGVhZGlseS9jb25zdGFudGx5CWNvbnN0YW50ZW1lbnRlCTAJMAkwCnN0ZWFsCXJvYmFyCTAJMQkxCnN0ZWFsaW5nCXJvYmFyCTAJMAkxCkJlIHN0ZWFsdGh5L2JlIGNhdXRpb3VzCWNhdXRlbG9zbwkwCTAJMQpzdGVlcAllbXBpbmFkYXMJMAkwCTEKc3RlZXBlZC9zb2FrZWQJZW1wYXBhZG8JMAkwCTEKc3RlZXIvbGVhZAlkaXJpZ2lyCTAJMAkxCnN0ZWVyaW5nCWRpcmlnaXIJMAkwCTEKc3RlbmNpbHMJcGxhbnRpbGxhcwkwCTAJMApzdGVwY2hpbGQJaGlqYXN0cm8JMAkxCTEKc3RpY2sJcGFsbwkwCTEJMQpzdGlyCXJldm9sdmVyCTAJMAkwCnN0aXRjaAlwdW50YWRhCTAJMQkxCnN0b2NrCXZhbG9yZXMJMAkwCTAKc3RvbGVuCXJvYmFkYXMJMAkwCTAKc3RvbmVkCWFwZWRyZWFkbwkwCTAJMApzdG9vZ2Uvc2hpbGwJY29tcGxpY2UJMAkwCTEKc3RvcmUJdGllbmRhCTAJMQkxCnN0cmFpZ2h0CWRlcmVjaG8JMAkwCTAKc3RyYWlnaHRmb3J3YXJkL2ZyYW5rCWZyYW5jbwkwCTEJMQpzdHJhaXRqYWNrZXQJbGEgY2FtaXNhIGRlIGZ1ZXJ6YQkwCTEJMQpzdHJhcAl0aXJhbnRlCTAJMQkxCnN0cmFwcGVkL21vbmV5bGVzcwlzaW4gZGluZXJvCTAJMQkxCnN0cmF5CWV4dHJhdmlhZG8JMAkxCTEKc3RyZWFtbGluZQlhZXJvZGluYW1pemFyCTAJMAkwCnN0cmVhbWxpbmVkCWFlcm9kaW5hbWljbwkwCTAJMApzdHJlbmd0aAlmdWVyemEJMAkxCTEKc3RyZW5ndGhlbglmb3J0YWxlY2VyCTAJMAkwCnN0cmVuZ3RoZW5lZAlyZWZvcnphZG8JMAkwCTEKc3RyZW5ndGhzCWZvcnRhbGV6YXMJMAkxCTEKc3RyZXRjaAl0cmFtbwkwCTAJMQpzdHJldGNoYWJsZQllc3RpcmFibGUJMAkwCTAKc3RyZXRjaGVzCWVzdGlyYQkwCTEJMQpzdHJldGNoaW5nCWVzdGlyYW1pZW50bwkwCTEJMQpzdHJpZGVzL2FkdmFuY2UJYXZhbmNlcwkwCTEJMQpzdHJpa2luZwlMbGFtYXRpdm8vZ29scGVhciAJMAkwCTEKc3RyaWtpbmcgZG93bi9wdWxsIGRvd24JZGVycmliYW5kbwkwCTAJMQpzdHJpa2luZ2x5CXNvcnByZW5kZW50ZQkwCTAJMQpzdHJpcGVkCXJheWFzCTAJMAkxCnN0cmlwcGVkCWRlc3BvamFkbwkwCTAJMApzdHJpdmUJc2UgZXNmdWVyemFuCTAJMQkxCnN0cml2ZWQgdG8Jc2UgZXNmb3J6byBwb3IJMAkwCTEKc3Ryb2tlIG9mIG1pZG5pZ2h0CWZpbG8gZGUgbGEgbWVkaWFub2NoZQkwCTAJMQpzdHJ1Z2dsZWQJbHVjaG8JMAkxCTAKc3R1Y2sJcGVnYWRvCTAJMAkwCnN0dW1ibGUJdHJvcGV6YXIJMAkxCTEKc3R1bWJsZWQJdHJvcGV6YWRvCTAJMAkxCnN0dW1ibGluZwl0cm9waWV6bwkwCTAJMApzdHVubmluZwlpbXByZXNpb25hbnRlCTAJMQkxCnN0dW50cwlhY3JvYmFjaWFzCTAJMQkxCnN1Ym1pc3Npb24JcHJlc2VudGFjaW9uCTAJMAkxCnN1YnRsZQlzdXRpbAkwCTEJMQpzdWJ0bHkJc3V0aWxtZW50ZQkwCTAJMQpzdWJ2ZXJ0ZWQJYWx0ZXJhZG8JMAkxCTEKc3VkZGVuCXJlcGVudGlubwkwCTAJMApzdWRkZW5seQlkZSByZXBlbnRlCTAJMQkxCnN1ZWQJZGVtYW5kYWRvCTAJMAkxCnN1ZmZpY2UJYmFzdGEJMAkwCTEKc3VmZmljaWVudCByb29tL2Vub3VnaCBzcGFjZQllc3BhY2lvIHN1ZmljaWVudGUJMAkxCTEKc3VpdGFibGUJYWRlY3VhZG8JMAkxCTEKc3VpdGVkCWFkZWN1YWRvCTAJMQkxCnN1bmJhdGhpbmcJdG9tYXIgZWwgc29sCTAJMAkwCnN1bmZsb3dlcglnaXJhc29sCTAJMQkxCnN1bnJpc2UJYW1hbmVjZXIJMAkxCTEKc3VwcGxpZXIJcHJvdmVlZG9yCTAJMAkwCnN1cHBseQlzdW1pbmlzdHJvIGRlCTAJMQkxCnN1cHBvcnRpbmcgcXVvdGVzCWNpdGFzIGRlIGFwb3lvCTAJMAkwCnN1cmZhY2UJc3VwZXJmaWNpZQkwCTEJMQpzdXJtb3VudGluZwlsYSBzdXBlcmFjaW9uIGRlIGxhCTAJMQkxCnN1cnZlaWxsYW5jZQl2aWdpbGFuY2lhCTAJMAkwCnN1cnZleQllc3R1ZGlvCTAJMAkxCnN1c3RhaW4vaG9sZAlzb3N0ZW5lcgkwCTEJMQpzd2FsbG93CXRyYWdhcgkwCTAJMApzd2VhdAlzdWRvcgkwCTEJMQpzd2VlcAliYXJyaWRvCTAJMAkxCnN3ZWVwc3Rha2UJc29ydGVvCTAJMAkwCnN3ZWV0CWR1bGNlCTAJMQkxCnN3ZWV0cwlkdWxjZXMJMAkwCTEKc3dpZnRseQlyYXBpZGFtZW50ZQkwCTAJMQpzd2luZ3MJY29sdW1waW9zCTAJMQkxCnN3aXBlCWRlc2xpemEgZWwgZGVkbwkwCTAJMApzd2lwaW5nCWRlc2xpemFyCTAJMQkxCnN5bmNlZAlzaW5jcm9uaXphZG8JMAkxCTEKdGFja2xpbmcvYm9hcmQJYWJvcmRhcgkwCTEJMQp0YWlsb3IJYWRhcHRhcgkwCTEJMQp0YWludGVkCW1hbmNoYWRvL2NvbnRhbWluYWRvCTAJMAkwCnRha2Ugb3Zlcgl0b21hciBlbCBjb250cm9sCTAJMQkxCnRha2Ugc2hhcGUJdG9tYXIgZm9ybWEJMAkxCTEKdGFtcGVyCXNhYm90ZWFyL2FsdGVyYXIvZmFsc2lmaWNhciAJMAkwCTAKdGFtcGVyaW5nL2hhbmRsaW5nCW1hbmlwdWxhY2lvbgkwCTAJMQp0YW4JYnJvbmNlYXJzZQkwCTEJMQp0YXAJdG9jYQkwCTAJMAp0YXBlc3RyeQl0YXBpegkwCTEJMQp0YXBwZWQJdG9jYWRvCTAJMQkxCnRhcHBpbmcJdG9jYXIJMAkwCTEKdGVhbW1hdGVzCWNvbXBhw7Flcm9zCTAJMQkxCnRlYXNlcy9tb2NrcwlzZSBidXJsYSBkZQkwCTAJMQp0ZW1wdGF0aW9uCXRlbnRhY2lvbgkwCTEJMQp0ZW1wdGluZwl0ZW50YWRvcgkwCTAJMAp0ZW5hbnQJaW5xdWlsaW5vCTAJMQkxCnRlbmV0cy92YWx1ZXMJcHJpbmNpcGlvcwkwCTAJMQp0ZW5zCWRlY2VuYXMJMAkwCTAKdGVudAljYXJwYQkwCTAJMAp0ZXJtZWQJRGVub21pbmFkbwkwCTAJMAp0aGFua2Z1bGx5CWFmb3J0dW5hZGFtZW50ZQkwCTAJMQp0aGF0J3MgaXQJZXNvIGVzIHRvZG8JMAkwCTAKdGhlIGhlaXIJZWwgaGVyZWRlcm8JMAkwCTEKdGhlZnQJcm9ibwkwCTAJMQp0aGVtc2VsdmVzCXNpIG1pc21vcwkwCTEJMQp0aGVyZQlhbGxhCTAJMQkxCnRoZXJlCWFsbGkJMAkxCTEKdGhlcmVmb3JlCXBvciBsbyB0YW50bwkwCTEJMQp0aGljawllc3Blc29yCTAJMAkxCnRoaWV2ZXMJbG9zIGxhZHJvbmVzCTAJMAkwCnRoaW4JZGVsZ2FkbwkwCTAJMQp0aGlyc3R5CXNlZAkwCTEJMQp0aGlzIGR1ZGUJZXN0ZSB0aXBvCTAJMQkxCnRoaXMgb25lCWVzdGUJMAkwCTAKdGhvcm55L3ByaWNrbHkJZXNwaW5vc28JMAkwCTEKdGhvcm91Z2gvZGVlcAlwcm9mdW5kbwkwCTAJMAp0aG9yb3VnaGx5L2luIGRlZXAJYSBmb25kbwkwCTAJMQp0aG9zZQlBcXVlbGxvcwkwCTAJMAp0aG91Z2h0L3tkYW91fSAJQXVucXVlCTAJMQkxCnRob3VnaHRzL3RoaW5raW5nCXBlbnNhbWllbnRvcwkwCTEJMQp0aHJlYXRzL21lbmFuY2UJYW1lbmF6YXMJMAkxCTEKdGhyZXNob2xkCXVtYnJhbAkwCTEJMQp0aHJpbGxlZC9jaGFybWVkCWVuY2FudGFkby9lbW9jaW9uYWRvCTAJMAkwCnRocml2ZQljcmVjZXIgY29uIGZ1ZXJ6YQkwCTAJMAp0aHJpdmluZy9wcm9zcGVyb3VzL3N1Y2Nlc3NmdWwJcHJvc3Blcm8JMAkwCTAKdGhyb2F0cwlnYXJnYW50YQkwCTAJMAp0aHJvdWdoCWEgdHJhdmVzL21lZGlhbnRlCTAJMAkwCnRodW1iCXB1bGdhcgkwCTEJMQp0aHVtYm5haWwJbWluaWF0dXJhCTAJMAkwCnRodW1ibmFpbHMJbWluaWF0dXJhcwkwCTEJMQp0aHVzCWFzaQkwCTAJMQp0aWNrZXQvcmVjZWlwdAlib2xldG8JMAkwCTAKdGlkYml0cwljdXJpb3NpZGFkZXMJMAkxCTEKdGllZAlhdGFkbwkwCTEJMQpOb29zZQlMYXpvcwkwCTEJMQp0aWdodAlhcHJldGFkbwkwCTEJMQp0aWdodGVuCWFwcmV0YXIJMAkwCTAKdGlnaHRlcgltYXMgYXByZXRhZG8JMAkxCTEKdGlnaHRseS9uYXJyb3dseQllc3RyZWNoYW1lbnRlCTAJMAkxCnRpbWUgYW5kIGFnYWluCXVuYSB5IG90cmEgdmV6CTAJMAkxCnRpbWVseSBmYXNoaW9uCW9wb3J0dW5hCTAJMAkxCnRpbWV0YWJsZXMvdGltZSBlbnRyeSBhbmQgZXhpdAlob3JhcmlvcwkwCTEJMQp0aW1pbmcJdGVtcG9yaXphY2lvbgkwCTEJMQp0aW55CXBlcXVlw7FvCTAJMQkxCnRpc3N1ZXMJcGHDsXVlbG9zIGRlIHBhcGVsCTAJMAkwCnRvIGFjY29tcGxpc2gJbG9ncmFyCTAJMQkxCnRvIGFjaGlldmUJcGFyYSBsb2dyYXIJMAkxCTEKdG8gYWNrbm93bGVkZ2UJcmVjb25vY2VyCTAJMAkwCnRvIGFjcXVpcmUJYWRxdWlyaXIJMAkxCTEKdG8gYW1lbmQJZW5tZW5kYXIJMAkxCTEKdG8gYXNzZXJ0CWFmaXJtYXIJMAkwCTEKdG8gYXNzb3J0L2NsYXNzaWZ5CWNsYXNpZmljYXIJMAkxCTEKdG8gYXR0ZW5kCWFzaXN0aXIJMAkxCTEKdG8gYmVoYXZlCWNvbXBvcnRhcnNlCTAJMAkwCnRvIGJsZW5kL21pbmdsZQltZXpjbGFyCTAJMQkxCnRvIGJvdGhlcgltb2xlc3RhcgkwCTAJMAp0byBjcmFmdAl0cmFiYWphcgkwCTAJMQp0byBjcmF0ZQllbWJhbGFyCTAJMAkxCnRvIGNyYXdsCWdhdGVhcgkwCTAJMAp0byBjcnVtYmxlCWEgZGVzbW9yb25hcnNlCTAJMQkxCnRvIGRlZmVyCWEgYXBsYXphcgkwCTAJMAp0byBkZWZ5CWRlc2FmaWFyCTAJMQkxCnRvIGRlbHZlCWFob25kYXIJMAkwCTEKdG8gZGVwaWN0CXJlcHJlc2VudGFyCTAJMQkxCnRvIGRldm90ZQlkZWRpY2FyCTAJMAkxCnRvIGRpdGNoL2FiYW5kb24vbGVhdmUJYWJhbmRvbmFyCTAJMAkxCnRvIGRpdmUJYnVjZWFyCTAJMQkxCnRvIGRpdmVydAlkZXN2aWFyCTAJMAkxCnRvIGRpdnZ5CXJlcGFydG8vZGlzdHJpYnVpcgkwCTAJMQp0byBkcm93bglwYXJhIGFob2dhcgkwCTAJMQp0byBlYXJuCWdhbmFyCTAJMAkwCnRvIGVhc2UJYWxpdmlhcgkwCTEJMQp0byBlbWJyb2lsCWVucmVkYXIJMAkwCTEKdG8gZW5jb3VyYWdlCWFuaW1hcgkwCTEJMQp0byBlbmQgdXAJdGVybWluYXIJMAkwCTAKdG8gZm9yd2FyZAlyZWVudmlhcgkwCTEJMQp0byBmdWxmaWwJY3VtcGxpcgkwCTEJMQp0byBmdXNzIHdpdGgJUXVlamFyc2UvcHJvYmxlbWFzIGNvbgkwCTAJMQp0byBmdXp6CWRlc2hpbGFjaGFyc2UJMAkwCTAKdG8gZ3Jhc3AJY2FwdGFyCTAJMAkxCnRvIGdyZWV0CXNhbHVkYXIJMAkxCTEKdG8gaGFsdAlkZXRlbmVyCTAJMQkxCnRvIGhhbXBlci9wcmV2ZW50CWltcGVkaXIJMAkwCTEKdG8gaGFzc2xlCW1vbGVzdGFyCTAJMAkxCnRvIGhpbnQJZXNib3phci9zdWdlcmVuY2lhCTAJMQkxCnRvIGhvbGQJc29zdGVuZXIgCTAJMQkxCnRvIGltcGFpci9oYXJtL2h1cnQJZGHDsWFyCTAJMAkxCnRvIGluc3VyZQlhc2VndXJhcgkwCTAJMQp0byBsZWFwCWJyaW5jYXIJMAkwCTEKdG8gbmVnbGVjdAlkZXNjdWlkYXIJMAkxCTEKdG8gb3ZlcmxhcAlzb2xhcGFyCTAJMQkxCnRvIHBheSBvZmYJcGFnYXIJMAkxCTEKdG8gcGVlawlvYnNlcnZhcgkwCTEJMQp0byBwaWNrCWNvZ2VyCTAJMQkxCnRvIHBsdW5nZQlwYXJhIHN1bWVyZ2lyc2UJMAkwCTAKdG8gcHVyY2hhc2UJY29tcHJhcgkwCTEJMQp0byBxdWFsaWZ5CWNhbGlmaWNhcgkwCTEJMQp0byBxdWl0CWFiYW5kb25hcgkwCTEJMQp0byByYWdlCXJhYmlhcgkwCTAJMQp0byByYXRlL3F1YWxpZnkvYXNzZXNzCWNhbGlmaWNhcgkwCTAJMQp0byByZWFjaAlhbGNhbnphcgkwCTAJMAp0byByZXZhbXAvcmVtb2RlbAlyZW1vZGVsYXIJMAkxCTEKdG8gcmlkZQltb250YXIJMAkxCTEKdG8gcmlwcGVkCXRvbmlmaWNhZG8JMAkwCTEKdG8gc2F2dnkvY29tcHJlaGVuZAljb21wcmVuZGVyCTAJMQkxCnRvIHNoYXJwZW4JYWd1ZGl6YXIJMAkwCTEKdG8gc2hpcAl0cmFuc3BvcnRhcgkwCTEJMQp0byBzaHV0IHVwCWEgY2FsbGFyCTAJMQkxCnRvIHNuZWFrCXNpZ2lsb3NvCTAJMQkxCnRvIHNvYWsJZW1wYXBhcgkwCTAJMQp0byBzcGF3bglnZW5lcmFyCTAJMAkwCnRvIHN0aWNrCXBlZ2FyIChwZWdhbWVudG8pIAkwCTAJMQp0byBzdGljayB3aXRoCXBhcmEgc2VndWlyIGNvbgkwCTAJMQp0byBzdHJpa2UJZ29scGVhcgkwCTEJMQp0byBzdHJ1Z2dsZQlsdWNoYQkwCTEJMQp0byBzdXN0YWluL21hbnRhaW4JbWFudGVuZXIJMAkxCTEKdG8gdGFpbG9yCWEgbWVkaWRhIChlaiwgdHJhamUpIAkwCTEJMQp0byB0ZXJtL2Rlbm9taW5hdGUJZGVub21pbmFyCTAJMAkwCnRvIHRocm93CXRpcmFyCTAJMQkxCnRvIHRpZQlhdGFyCTAJMQkxCmNvbXBvc2UvdG9uZQljb21wb25lci9hZmluYXIgCTAJMAkwCnRvIHRvZ2dsZQlwYXJhIGFsdGVybmFyCTAJMQkxCnRvIHRyeSBvdXQJcGFyYSBwcm9iYXIJMAkxCTEKdG8gdHdlYWsvZml0L2FkanVzdAlhanVzdGFyCTAJMAkwCnRvIHVuY292ZXIJZGVzY3VicmlyCTAJMAkxCnRvIHVuZGVydGFrZQllbXByZW5kZXIJMAkxCTEKdG8gdW5sZWFzaAlkZXNlbmNhZGVuYXIJMAkxCTEKdG8gdXBsaWZ0CXJlYWN0aXZhcgkwCTAJMAp0byB3b25kZXIJcHJlZ3VudGFyc2UJMAkxCTEKdG9hc3QJdG9zdGFkYQkwCTEJMQp0b2VzCW1pcyBkZWRvcyBkZSBsb3MgcGllcwkwCTEJMQp0b2dnbGUJYWx0ZXJuYXIJMAkxCTEKdG9pbGV0CWJhw7FvCTAJMQkxCnRvaWxpbmcvYnVzc3kJYWZhbmFkbwkwCTAJMAp0b25ndWUJbGEgbGVuZ3VhCTAJMQkxCnRvbnNpbGxpdGlzCWxhIGFtaWdkYWxpdGlzCTAJMQkxCnRvb2sgb2ZmIFt0YWtlIG9mZl0JZGVzcGVnw7MJMAkxCTEKdG9vbAloZXJyYW1pZW50YQkwCTEJMQp0b29sY2hhaW4JY29uanVudG8gZGUgaGVycmFtaWVudGFzCTAJMQkxCnRvc3MvbGF1bmNoL3Rocm93CWxhbnphcgkwCTEJMQp0b3VnaAlkaWZpY2lsCTAJMAkxCnRvdWdoZXN0CW1hcyBkaWZpY2lsZXMJMAkxCTEKdG91cmlzdAl0dXJpc3RhCTAJMQkxCnRvd2FyZAloYWNpYQkwCTEJMQp0b3dhcmRzCWhhY2lhCTAJMQkxCnRvd2VsCXRvYWxsYQkwCTAJMQp0b3dlcgl0b3JyZQkwCTEJMQp0cmFjZQlyYXN0cm8JMAkwCTEKdHJhZGVvZmZzCWNvbXBlbnNhY2lvbmVzCTAJMQkxCnRyYWlsCXJhc3RybwkwCTAJMAp0cmF2ZXJzZQlyZWNvcnJlcgkwCTAJMQp0cmF2ZXN0eS9wYXJvZHkJcGFyb2RpYQkwCTEJMQp0cmVhdHMJZ29sb3NpbmFzIAkwCTAJMQp0cmlja3kvZGlmZmljdWx0L3RvdWdoL2hhcnNoCWRpZmljaWwJMAkwCTAKdHJvdXNlcnMJcGFudGFsb25lcwkwCTAJMAp0cnVzdHdvcnRoaW5lc3MvcmVsaWFiaWxpdHkJbGEgY29uZmlhYmlsaWRhZAkwCTAJMQp0cnkgb3V0CXByb2JhcgkwCTAJMAp0dXJtb2lsL2NvbmZ1c2nDs24JY29uZnVzaW9uCTAJMQkxCnR1cm5zIG91dAlyZXN1bHRhCTAJMAkwCnR3ZWFraW5nCWFmaW5hbmRvCTAJMAkxCnViaXF1aXRvdXMJb21uaXByZXNlbnRlCTAJMQkxCnVtYnJlbGxhCXBhcmFndWFzCTAJMQkxCnVuYmVhcmFibGUJaW5zb3BvcnRhYmxlCTAJMQkxCnVuYnJlYWthYmxlCWlycm9tcGlibGUJMAkxCTEKdW5jaGFpbglsaWJlcmFyCTAJMAkxCnVuZGVyYmVsbHkJYmFqbyB2aWVudHJlCTAJMQkxCnVuZGVyZ29pbmcvc3VibWl0dGVkCXNvbWV0aWRvcyBhCTAJMAkxCnVuZGVyZ29uZS9zdWZmZXJlZAlzdWZyaWRvL2V4cGVyaW1lbnRhcgkwCTAJMQp1bmRlcmhhbmRlZC9kaXNob25lc3QJZGVzaG9uZXN0byAJMAkwCTAKdW5kZXJseWluZwlzdWJ5YWNlbnRlCTAJMAkxCnVuZGVybmVhdGgJZGViYWpvIGRlCTAJMQkxCnVuZGVycmF0ZWQJc3ViZXN0aW1hZG8JMAkwCTAKdW5kZXJzdGFuZGFibHkvY29tcHJlbmhlbnNpYmx5CWNvbXByZW5zaWJsZW1lbnRlCTAJMQkxCnVuZGVyc3Rvb2QJY29tcHJlbmRpZG8JMAkxCTEKdW5kZXJ3aGVsbWVkL2Rpc2FwcG9pbnRlZAlkZWNlcGNpb25hZG9zCTAJMAkwCnVuZXZlbglkZXNpZ3VhbAkwCTAJMQp1bmV2ZW5seS91bmVxdWFsIAlkZXNpZ3VhbC9pcnJlZ3VsYXJtZW50ZQkwCTAJMQp1bmV4cGVjdGVkbHkJaW5lc3BlcmFkYW1lbnRlCTAJMQkxCnVuZmFpdGhmdWwJaW5maWVsCTAJMQkxCnVuZml0CW5vIGFwdG8JMAkxCTEKdW5sZXNzCWEgbWVub3MgcXVlCTAJMQkxCnVubGlrZWx5CXJhcm8JMAkwCTEKdW5ub3RpY2VkCWRlc2FwZXJjaWJpZG8JMAkwCTEKdW5vYnRydXNpdmVseS9kaXNjcmVldGx5CWRpc2NyZXRhbWVudGUJMAkwCTAKdW5yYXZlbAlkZXNlbnRyYcOxYXIJMAkwCTEKdW5yZWFkYWJsZQlpbGVnaWJsZQkwCTAJMAp1bnJlc3BvbnNpdmUvaW5zZW5zaXRpdmUJaW5zZW5zaWJsZQkwCTEJMQp1bnNlZW4JaW52aXNpYmxlCTAJMQkxCnVuc3VuZwlhbm9uaW1vCTAJMAkwCnVudXNhYmxlCWludXRpbGl6YWJsZQkwCTAJMQp1bnZlaWxlZAlkZXN2ZWxhZG8JMAkxCTEKdW53aWxsaW5nCXJlYWNpbyAvIHJldGljZW50ZSAJMAkwCTAKdW53aW5kaW5nL3Vucm9sbGVkCWRlc2Vucm9sbGFkby9yZWxhamFyc2UJMAkxCTEKdXAgdG8JaGFzdGEJMAkxCTEKdXAgdG8gZGF0ZQloYXN0YSBsYSBmZWNoYQkwCTAJMQp1cCB1bnRpbAloYXN0YQkwCTAJMQpIb25lc3QJSG9uZXN0byAJMAkwCTEKdXBsaWZ0aW5nCWVkaWZpY2FudGUJMAkwCTEKdXBvbglzb2JyZQkwCTAJMAp1cG9uIHJlY2VpcHQJdHJhcyBsYSByZWNlcGNpb24JMAkwCTEKdXBvbiBzdWJtaXNzaW9uCXRyYXMgbGEgcHJlc2VudGFjaW9uCTAJMAkxCnVwcGVyL2hpZ2hlcglzdXBlcmlvcgkwCTAJMQp1cHNpZGUJdmVudGFqYQkwCTEJMQp1cHNpZGUgZG93bglhbCByZXZlcwkwCTEJMQp1cHRha2UvY29uc3VwdGlvbgljb25zdW1vCTAJMAkxCnVwd2FyZHMJaGFjaWEgYXJyaWJhCTAJMQkxCnVzZWQgdG8Jc29saWEJMAkxCTEKdXR0ZXJseQl0b3RhbG1lbnRlCTAJMAkxCnZhY3V1bQl2YWNpbwkwCTAJMApnbGFzcwlWYXNvCTAJMQkxCnZhdWx0CWJvdmVkYQkwCTEJMQp2ZWlsCXZlbG8JMAkwCTAKdmVuZG9yCXByb3ZlZWRvcgkwCTEJMQp2ZXJiIHRlbnNlCXRpZW1wbyB2ZXJiYWwJMAkxCTEKdmVyYm9zZQlkZXRhbGxhZG8JMAkwCTEKdmVyeSBzbGljay9zbGlkaW5nCW11eSByZXNiYWxvc28JMAkwCTAKdm93ZWQJdm90b3MJMAkwCTAKdm95YWdlCXZpYWplCTAJMAkwCndhZ2VzCWVsIHNhbGFyaW8JMAkwCTEKd2Fpc3Rjb2F0CWNoYWxlY28JMAkwCTEKd2FpdGVyCWNhbWFyZXJvCTAJMAkwCndhbGsgb3V0CWNhbWluYXIvc2FsaXIJMAkwCTAKd2Fsa3Rocm91Z2gJdHV0b3JpYWwJMAkwCTEKd2FsbAlwYXJlZAkwCTEJMQp3YWxsZXQJY2FydGVyYQkwCTAJMQp3YW5kZXJpbmcJZXJyYW50ZQkwCTEJMQp3YW5pbmcJbWVuZ3VhbnRlCTAJMAkxCndhbm5hYmUJYXNwaXJhbnRlCTAJMAkwCndhcmZhcmUJbGEgZ3VlcnJhCTAJMQkxCndhcm1lZAljYWxlbnRhZG8JMAkxCTEKd2FybglhdmlzYXIJMAkxCTEKd2FyeS9kaXN0cnVzdGZ1bAlkZXNjb25maWFkbwkwCTAJMQp3YXN0ZWZ1bAlkZXNwaWxmYXJybwkwCTAJMQp3YXRjaG91dAljdWlkYWRvCTAJMQkxCndhdGVyaW5nCXJpZWdvCTAJMQkxCndhdmVkCXNhbHVkby9hZ2l0YXIJMAkwCTAKd2Vha25lc3NlcwlkZWJpbGlkYWRlcwkwCTEJMQp3ZWFsdGgJcmlxdWV6YQkwCTEJMQp3ZWFzZWwJbGEgY29tYWRyZWphCTAJMAkxCndlaWdodAlkZSBwZXNvCTAJMQkxCndlbGzigJNwcm92ZW4JZWZpY2FjaWEgcHJvYmFkYQkwCTAJMAp3ZW50IGF3YXkvaXQgZ29uZQlzZSBmdWUJMAkxCTEKd2VwdCBbd2VlcF0JbGxvcm8gIAkwCTEJMQp3aGVlbAlydWVkYQkwCTEJMQp3aGVlbGVycwlydWVkYXMJMAkxCTEKd2hlZWxzCXJ1ZWRhcwkwCTAJMAp3aGVuIGl0IGNhbWUgb3V0CWN1YW5kbyBzYWxpbwkwCTEJMQp3aGVuZXZlci9hcyBsb25nIGFzCXNpZW1wcmUgcXVlCTAJMQkxCndoZXJlYXMJbWllbnRyYXMJMAkxCTEKd2hlcmVieQlwb3IgbG8gY3VhbAkwCTAJMAp3aGljaGV2ZXIJY3VhbHF1aWVyCTAJMAkwCndoaWxlIGJhY2sJdGllbXBvIGF0cmFzCTAJMAkxCndoaWxzdAltaWVudHJhcwkwCTEJMQp3aGluZS9jb21wbGFpbglxdWVqYXJzZQkwCTEJMQp3aGlwcGluZwlhem90ZXMJMAkwCTEKd2hpc3RsZWJsb3dlci9jb21wbGFpbmFudAlkZW51bmNpYW50ZQkwCTAJMAp3aGl6eiBraWQJbmnDsW8gcHJvZGlnaW8JMAkxCTEKd2hvbGUJdG90YWwJMAkwCTEKd2hvbGVoZWFydGVkbHkJZGUgdG9kbyBjb3Jhem9uCTAJMAkxCndob2xlc2FsZQlhbCBwb3IgbWF5b3IJMAkwCTEKd2hvbQlxdWllbgkwCTEJMQp3aG9yZQlwcm9zdGl0dXRhCTAJMQkxCndpZG93CXZpdWRhCTAJMQkxCndpbGRjYXJkCWNvbW9kaW4JMAkxCTEKd2lsbGluZ25lc3MJdm9sdW50YWQgLyBkaXNwb3NpY2lvbgkwCTEJMQp3aWxseeKAk25pbGx5CXF1ZXJhbW9zIG8gbm8JMAkwCTAKd2luZGluZyBkb3duL3Vud2luZAlSZWxhamFyc2UgCTAJMAkwCndpbmdzCWFsYXMJMAkxCTEKd2lwZQlsaW1waWUJMAkwCTEKd2lzZSB0bwlzYWJpbwkwCTEJMQp3aXNlcgltYXMgc2FiaW8JMAkxCTEKd2l0Y2hjcmFmdAlsYSBicnVqZXJpYQkwCTAJMAp3aXRoZHJhd2FsCXJldGlybwkwCTEJMQp3aXRuZXNzCXRlc3RpZ28JMAkwCTAKd29tYgl2aWVudHJlCTAJMQkxCndvbmRlcglwcmVndW50bwkwCTAJMQp3b25kZXJpbmcJcHJlZ3VudGFuZG9zZQkwCTAJMAp3b25kcm91cwltYXJhdmlsbG9zbwkwCTEJMQp3b29kZW4JZGUgbWFkZXJhCTAJMAkxCndvb2VkL2ludGVuZGVkCXByZXRlbmRpZGEJMAkwCTEKd29yZGVkCXJlZGFjdGFkbwkwCTEJMQp3b3JkcwlwYWxhYnJhcwkwCTEJMQp3b3JlIFt3ZWFyXQlsbGV2YWJhICAJMAkxCTEKd29ybGR3aWRlCWVuIHRvZG8gZWwgbXVuZG8JMAkwCTAKd29ybQlndXNhbm8JMAkwCTAKd29ycmllZAlwcmVvY3VwYWRvCTAJMAkwCndvcnNoaXAJbGEgYWRvcmFjaW9uCTAJMQkxCndvcnNoaXBpbmcJYWRvcmFyCTAJMQkxCndvcnNoaXBwaW5nCWFkb3JhcgkwCTAJMAp3b3J0aAl2YWxvcgkwCTAJMAp3b3J0aCBub3RpbmcJY2FiZSBzZcOxYWxhcgkwCTAJMAp3b3J0aHdoaWxlL3dvcnRoIG5vdGluZwl2YWxlIGxhIHBlbmEJMAkwCTEKd291bmRzCWxhcyBoZXJpZGFzCTAJMAkwCndyYW5nbGluZwlmb3JjZWplby9kaXNjdXNpb24JMAkxCTEKd3JlbmNoCWxsYXZlIGluZ2xlc2EJMAkwCTAKd3JpbmtsZWQJYXJydWdhZGEJMAkwCTAKeWllbGRzCVByb2R1Y2lyL3Byb3ZlZXIJMAkwCTAKRmFpcmx5CUVxdWl0YXRpdmFtZW50ZQkwCTAJMApQZXJ2YXNpdmUJUGVuZXRyYW50ZQkwCTAJMQpNZWFuCU1lZGlvCTAJMAkwCkp1c3QgZ290CUFjYWJvIGRlCTAJMAkwCnNuZWVyZWQJU2UgYnVybMOzCTAJMAkxClRvIENhc3QJRW1pdGlyL2xhbnphcgkwCTAJMApBcyB0aG91Z2gJQ29tbyBzaQkwCTAJMQp3YXlzIG9mZglMZWpvcwkwCTAJMApIZWFkcyB1cAlBdmlzbwkwCTEJMQ=="
          }
        }
      }
    ]
  }
}