outdated	anticuado	0	0	0
outgoing	saliente	0	0	1
outgrow/overcoming	superan	0	0	0
outlandish/extravagant	extravagantes	0	0	0
outline/scheme	esquema	0	0	0
outlined	descrito	0	0	0
outnumber/more numerous	Superan en número	0	1	1
outrageous	indignante	0	0	0
overcome	Superar a	0	0	0
outset/start/begin 	comenzar	0	0	1
outside	fuera	0	1	1
outsiders	forasteros	0	0	0
outward	Exterior 	0	0	1
outweigh/heavier	pesa mas	0	0	0
over and over	mas y mas	0	0	0
overall	en general	0	0	1
overcome	superar	0	0	0
overcomes	supera	0	0	0
overhauling/reconditioning	reacondicionamiento	0	0	0
overlap	superposicion	0	0	0
overlay	superpuesta	0	0	0
overlooked	Vista superior 	0	0	1
oversee	supervisar	0	0	1
oversight/survelliance	vigilancia/supervision	0	0	0
overtook/overcome	supero	0	1	1
overwhelming	abrumadora	0	0	0
ox	buey	0	0	0
pace/step 	paso	0	0	0
paint	pintura	0	0	1
pale	palido	0	0	0
paramount/suprime	supremo	0	0	0
particular	especial	0	0	0
partly	parcialmente	0	0	0
parts	las partes	0	1	1
parts	partes	0	0	0
party	fiesta	0	0	0
pass	Pasar	0	1	1
passage	pasaje	0	0	0
passed	aprobado	0	1	1
patient	paciente	0	0	0
pave	allanar	0	0	0
payload	carga	0	0	0
peas	guisantes	0	0	1
pedantic	pedante	0	0	0
pedestrian	peatonal	0	0	0
peek at them	echarles un vistazo	0	0	1
peer review	revision de expertos	0	0	0
peerless	sin par	0	1	1
peril	peligro	0	1	1
perks	ventajas	0	0	0
pervasiveness/omnipresence	omnipresencia	0	1	1
pick up	recoger	0	0	0
picture	cuadro	0	0	0
pill	pildora	0	0	0
pillar	pilar	0	1	1
pillow	almohada	0	0	0
pinch	pizca	0	1	1
pinpoint/to locate	localizar	0	0	0
pins	alfileres	0	0	0
plagued	plagado	0	0	0
plastered	estucado	0	1	1
pleads	se declara	0	0	0
pleased (please)	satisfecho	0	0	0
plenty	un monton	0	0	1
plethora	gran cantidad	0	0	0
ploy/tactic	tactica	0	0	0
poetry	la poesia	0	0	0
politely	cortesmente	0	1	1
polls	las encuestas	0	0	0
popped	aparecio	0	0	0
portraits	retratos	0	0	0
portraying	retratando	0	0	0
powerless	impotente	0	0	0
praise	alabanza	0	0	0
preachers	los predicadores	0	1	1
preflight/checks	comprobaciones	0	0	1
premises	local	0	0	0
worried	preocupado /da	0	0	1
pressure	presion	0	1	1
pretty good/farly good	bastante bueno	0	0	0
pretty much/farly/quite	Bastante	0	0	0
pretty straight	bastante sencillo	0	1	1
preys	presas	0	0	0
prickly	espinosa	0	0	0
prior to	antes de	0	0	0
proficiency	competencia/habilidades	0	1	1
profitable	rentable	0	1	1
promotes	promueve	0	0	0
prompted/caused	Provocado	0	0	0
prone	propenso	0	0	0
proposal	propuesta	0	0	0
proposed	propuesto	0	0	0
prospects/perspective	perspectivas	0	0	0
protrude	sobresalen	0	0	0
proved	demostrado	0	0	1
prowls	merodear	0	0	0
puckered	fruncido	0	0	0
pulls	tira	0	0	1
punching	puñetazos	0	0	0
pure	puro	0	0	0
purse/handbag	bolso	0	0	0
purse	monedero	0	0	0
pursue	perseguir	0	0	0
pursuit	busqueda	0	1	1
pursuits	busquedas	0	0	0
pushed	empujado	0	0	0
pushing	empujando	0	0	0
quiet times	momentos de tranquilidad	0	0	0
quirks/peculiarities	peculiaridades	0	1	1
quite	bastante	0	1	1
quote	cita	0	0	0
quotes	cita	0	0	0
rafters	vigas	0	0	0
ramped up	incrementando	0	0	1
ramps	rampas	0	0	0
ransom/rescue	rescate	0	0	0
rant	despotricar	0	0	0
rare	raras	0	0	0
rather	mas bien	0	1	1
rather than/instance of	en lugar de	0	0	0
rattling/shaking	Zarandeo	0	0	1
reach/scope	alcance	0	0	0
readily	prontamente	0	0	0
realm/kingdom	reino	0	0	0
rear	trasero	0	0	0
receipt	recibo/boleta	0	1	1
reckless	imprudente / temerario 	0	0	0
recovery vehicle	vehiculo de asistencia	0	0	0
redress/repair	reparacion	0	0	0
refurbished	reformado	0	0	0
refusing/declaine	negarse	0	0	1
regard	respeto	0	0	0
regarding	acerca de	0	0	0
regardless	independientemente	0	1	1
regards	saludos	0	0	0
regrets	lamenta/remordimiento	0	1	1
reimbursed	reembolso	0	0	0
relays the packet	retransmite el paquete	0	0	0
reliability	confiabilidad	0	0	0
reliable	de confianza	0	0	0
reliance	confianza	0	0	1
rely/trusting	confiando	0	0	0
relied upon	confiar en/basarse en	0	0	0
relies on	se basa	0	0	0
rely	confiar	0	0	0
remain	permanecer	0	0	1
remainder	resto	0	0	0
remaining/leftovers	restantes	0	1	1
remains	restos	0	0	0
remains one	sigue siendo uno	0	1	1
renaissance	renacimiento	0	0	0
resembles	se asemeja	0	1	1
restrain	restringir	0	0	0
retain	retener	0	0	0
rethought	repensado	0	0	0
retrofitting	reequipamiento	0	0	0
reveal	revelan	0	0	0
revenues	ingresos	0	0	0
reward	recompensa	0	0	0
rewarded	premiados	0	0	0
ridden	montado	0	0	0
riddles	enigmas	0	0	0
ride	paseo	0	0	0
right away	inmediato	0	0	0
righteous	justo	0	1	1
riots	disturbios	0	0	0
ripe/mature	madura	0	0	0
rise/go up	subir	0	0	0
roadblocks	obstaculos	0	0	0
roams	vaga	0	0	0
robes	tunicas	0	0	0
rodents	los roedores	0	0	0
rogue	picaro/bruto	0	0	0
rough	aspero	0	0	0
roughly	aproximadamente	0	0	0
roundup	Resumen	0	0	0
rule of thumb	regla de oro	0	1	1
rundown	resumen	0	0	0
rush	prisa	0	0	0
safety net	red de seguridad	0	1	1
sang	canto	0	0	1
sausage	salchicha	0	0	0
savvy	conocedores	0	0	0
scam	estafa	0	0	0
scarce	escasos	0	0	0
scares	asusta	0	0	0
scars	cicatrices	0	0	0
scattered	dispersos	0	0	0
scoffs/make fun	mofarse / burlarse	0	0	0
scouring	fregar/limpiar	0	0	0
scraping	raspado	0	0	0
scraps/waste	residuos	0	0	1
scratch	rasguño	0	1	1
Memopad	bloc de notas	0	0	0
screwed up	jodido	0	1	1
screws	tornillos	0	0	0
seal	sello	0	0	0
seam	Costura 	0	0	0
seamless	perfecta	0	0	0
seamlessly/consistently	consistentemente	0	1	1
seasoned	sazonado	0	0	1
seclusion	la reclusion	0	0	0
seemingly	aparentemente	0	0	0
seems	parece	0	0	0
Transition	transicion	0	0	0
seize	coger/confiscar 	0	0	0
seizure	las convulsiones	0	0	0
seldom	rara vez	0	0	0
self–service	autoservicio	0	0	0
self–service insight	vision de autoservicio	0	0	0
sense	sentido	0	0	0
sequel	secuela	0	0	0
settled	se establecieron	0	1	1
settlement	liquidacion	0	0	0
settlement currencies	liquidacion de divisas	0	0	0
settling down	estableciendose	0	0	0
sever	cortar (mano) 	0	0	0
shade	la sombra	0	0	1
shall we	vamos	0	0	1
shallow/superficial	superficial	0	0	0
shaping/conformation	conformacion	0	1	1
share	compartir	0	0	0
sharply	bruscamente	0	1	1
shave	afeitarse	0	0	0
sheet	sabana	0	1	1
shelf/shelves	estante	0	0	0
sheltered	protegido	0	1	1
shelves	estantes	0	0	0
shield	escudo	0	1	1
shills	complices	0	0	0
shim	calza	0	0	0
shiny	brillante	0	0	0
shortcomings/defects	defectos	0	0	0
should	deberia	0	1	1
shouts	gritos	0	0	1
shoving/pushing/jostling	empujones	0	0	1
show up above	aparecen por encima de	0	0	0
showcasing	mostrando	0	0	0
showstopper	sensacional	0	0	0
shrink	encoger	0	0	0
shrunk	reducido	0	0	0
shutter	obturador	0	0	0
siblings	hermanos	0	1	1
side–effect	efectos secundarios	0	0	0
sidestep	eludir	0	0	0
sight	a la vista	0	0	0
silk	la seda	0	0	0
silly/dull/dummy/foolish/awkward	tonto	0	0	0
simplicity sake	en aras de la simplicidad	0	0	0
simply put	en simple	0	0	0
since	ya que	0	0	0
since every	ya que cada	0	1	1
since it	ya que	0	0	0
sinewy	tendinosa	0	0	1
sketchbook	cuaderno de bocetos	0	0	0
skewed/bent	Torcido 	0	0	0
skip	omitir	0	0	0
skipped	saltado	0	1	1
slab	losa	0	0	1
slack	holgura	0	0	0
slam	golpe fuerte	0	1	1
slapping	bofetadas	0	0	1
sleek	pulcro	0	0	0
sleepy	sueño	0	0	1
sleight/tricks	artimañas	0	0	0
slew	mato a	0	0	0
slew/lots of ways	monton de formas	0	0	0
slightly	ligeramente	0	0	0
slogging/obstinate	obstinado	0	0	0
slopes	pendiente	0	0	0
sloppy/neglected	descuidado	0	0	0
sloth	la pereza	0	0	1
sluggish	lento	0	1	1
smokescreens	cortinas de humo	0	0	0
smooth/soft	suave	0	0	0
snatch	arrebatar	0	0	1
snazzy/elegant	elegante	0	0	0
sneaky	engañoso	0	1	1
sneezed	estornudado	0	0	1
snoop	curiosear	0	0	0
so far	hasta ahora	0	0	0
so far so good	hasta ahora todo va bien	0	1	1
so much so	tanto es asi	0	1	1
sober	sobrio	0	0	0
soiling	ensuciar	0	0	0
somehow	de alguna manera	0	0	1
sort	tipo	0	0	0
sort of	tipo de	0	0	0
sought(seek)/searched	buscado	0	0	0
sour	agria	0	0	0
sovereign	soberano	0	0	1
sowing	la siembra	0	0	1
spacecraft	la nave espacial	0	0	0
span/encompass	abarcar	0	0	0
spanned/encompassing	Abarcado	0	1	1
spanning	que abarca	0	0	1
spare	repuesto	0	0	0
sparingly/scarcely	escasamente	0	0	0
sparkling	chispeante	0	1	1
spear	lanza	0	0	0
specious/deceptive	engañosa/irregular	0	0	0
spell	hechizo	0	0	0
spellchecker	corrector ortografico	0	0	1
spiced up	aderezado	0	0	0
spill	vertir	0	0	1
spill the beans	dar informacion secreta	0	0	0
spin–off	derivacion	0	1	1
spoil	Hecharse a perder	0	0	0
spoofing	suplantacion de identidad	0	0	0
spotlight	foco de luz	0	1	1
spotted	manchado	0	0	0
spouse	conyuge	0	0	0
spreads	se propaga	0	0	0
sprouted	Brotó 	0	0	1
stab	puñalada	0	1	1
staggered	Escalonado	0	0	0
Upset	Disgustado	0	0	0
Heading for	Rumbo a	0	0	1
Shreds	Tritura	0	0	0
Demise	Fallecimiento	0	0	1
Dissmised	Despedido	0	0	0
Overdue	Atrasado	0	0	0
Foisted	Impuso	0	0	0
allegedly	Supuestamente	0	0	0
Spine	Columna vertebral	0	0	0
Statue	Estatua	0	0	0
Pour	Derramar	0	0	1
Issuance	Emision	0	0	0
Fairy tales	Cuentos de hadas	0	0	0
Outstanding	Sobresaliente/notable	0	0	1
Overkill	Exagerado	0	1	1
Its up to our	Depende de nuestro	0	0	1
Bandaid	Parche curita	0	0	0
Retrieves	Recupera	0	0	0
Sizzle	Chispazo	0	0	1